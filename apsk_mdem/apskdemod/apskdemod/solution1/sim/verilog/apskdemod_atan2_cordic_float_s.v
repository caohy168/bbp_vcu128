// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module apskdemod_atan2_cordic_float_s (
        ap_clk,
        ap_rst,
        y_in,
        x_in,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] y_in;
input  [31:0] x_in;
output  [31:0] ap_return;
input   ap_ce;

reg[31:0] ap_return;

reg   [31:0] c_reg_88;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_atan2_generic_float_s_fu_169_ap_return;
reg   [31:0] reg_191;
reg   [0:0] or_ln757_reg_574;
reg   [0:0] or_ln757_reg_574_pp0_iter10_reg;
reg   [0:0] or_ln757_1_reg_578;
reg   [0:0] or_ln757_1_reg_578_pp0_iter10_reg;
reg   [0:0] icmp_ln824_reg_582;
reg   [0:0] icmp_ln824_reg_582_pp0_iter10_reg;
reg   [0:0] icmp_ln766_reg_594;
reg   [0:0] icmp_ln766_reg_594_pp0_iter10_reg;
reg   [0:0] icmp_ln824_2_reg_590;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter10_reg;
reg   [0:0] and_ln18_reg_598;
reg   [0:0] and_ln18_reg_598_pp0_iter10_reg;
reg   [0:0] and_ln18_1_reg_602;
reg   [0:0] and_ln18_1_reg_602_pp0_iter10_reg;
reg   [0:0] icmp_ln824_3_reg_618;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter10_reg;
reg   [0:0] and_ln746_1_reg_622;
reg   [0:0] and_ln746_1_reg_622_pp0_iter10_reg;
wire   [0:0] p_Result_s_fu_201_p3;
reg   [0:0] p_Result_s_reg_553;
reg   [0:0] p_Result_s_reg_553_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter5_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter6_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter7_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter8_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter9_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter10_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter11_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter12_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter13_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter14_reg;
reg   [0:0] p_Result_s_reg_553_pp0_iter15_reg;
reg   [0:0] p_Result_31_reg_558;
reg   [0:0] p_Result_31_reg_558_pp0_iter1_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter2_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter3_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter4_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter5_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter6_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter7_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter8_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter9_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter10_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter11_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter12_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter13_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter14_reg;
reg   [0:0] p_Result_31_reg_558_pp0_iter15_reg;
wire   [0:0] icmp_ln828_fu_261_p2;
reg   [0:0] icmp_ln828_reg_570;
reg   [0:0] icmp_ln828_reg_570_pp0_iter1_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter2_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter3_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter4_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter5_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter6_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter7_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter8_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter9_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter10_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter11_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter12_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter13_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter14_reg;
reg   [0:0] icmp_ln828_reg_570_pp0_iter15_reg;
wire   [0:0] or_ln757_fu_267_p2;
reg   [0:0] or_ln757_reg_574_pp0_iter1_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter2_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter3_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter4_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter5_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter6_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter7_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter8_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter9_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter11_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter12_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter13_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter14_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter15_reg;
reg   [0:0] or_ln757_reg_574_pp0_iter16_reg;
wire   [0:0] or_ln757_1_fu_291_p2;
reg   [0:0] or_ln757_1_reg_578_pp0_iter1_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter2_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter3_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter4_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter5_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter6_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter7_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter8_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter9_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter11_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter12_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter13_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter14_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter15_reg;
reg   [0:0] or_ln757_1_reg_578_pp0_iter16_reg;
wire   [0:0] icmp_ln824_fu_297_p2;
reg   [0:0] icmp_ln824_reg_582_pp0_iter1_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter2_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter3_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter4_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter5_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter6_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter7_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter8_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter9_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter11_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter12_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter13_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter14_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter15_reg;
reg   [0:0] icmp_ln824_reg_582_pp0_iter16_reg;
wire   [0:0] and_ln762_fu_303_p2;
reg   [0:0] and_ln762_reg_586;
reg   [0:0] and_ln762_reg_586_pp0_iter1_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter2_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter3_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter4_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter5_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter6_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter7_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter8_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter9_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter10_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter11_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter12_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter13_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter14_reg;
reg   [0:0] and_ln762_reg_586_pp0_iter15_reg;
wire   [0:0] icmp_ln824_2_fu_309_p2;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter1_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter2_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter3_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter4_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter5_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter6_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter7_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter8_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter9_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter11_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter12_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter13_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter14_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter15_reg;
reg   [0:0] icmp_ln824_2_reg_590_pp0_iter16_reg;
wire   [0:0] icmp_ln766_fu_343_p2;
reg   [0:0] icmp_ln766_reg_594_pp0_iter1_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter2_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter3_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter4_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter5_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter6_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter7_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter8_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter9_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter11_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter12_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter13_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter14_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter15_reg;
reg   [0:0] icmp_ln766_reg_594_pp0_iter16_reg;
wire   [0:0] and_ln18_fu_349_p2;
reg   [0:0] and_ln18_reg_598_pp0_iter1_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter2_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter3_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter4_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter5_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter6_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter7_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter8_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter9_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter11_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter12_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter13_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter14_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter15_reg;
reg   [0:0] and_ln18_reg_598_pp0_iter16_reg;
wire   [0:0] and_ln18_1_fu_355_p2;
reg   [0:0] and_ln18_1_reg_602_pp0_iter1_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter2_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter3_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter4_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter5_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter6_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter7_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter8_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter9_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter11_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter12_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter13_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter14_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter15_reg;
reg   [0:0] and_ln18_1_reg_602_pp0_iter16_reg;
wire   [31:0] a_fu_369_p1;
reg   [31:0] a_reg_606;
wire   [31:0] b_fu_382_p1;
reg   [31:0] b_reg_612;
wire   [0:0] icmp_ln824_3_fu_403_p2;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter1_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter2_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter3_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter4_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter5_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter6_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter7_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter8_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter9_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter11_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter12_reg;
reg   [0:0] icmp_ln824_3_reg_618_pp0_iter13_reg;
wire   [0:0] and_ln746_1_fu_439_p2;
reg   [0:0] and_ln746_1_reg_622_pp0_iter1_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter2_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter3_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter4_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter5_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter6_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter7_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter8_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter9_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter11_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter12_reg;
reg   [0:0] and_ln746_1_reg_622_pp0_iter13_reg;
wire   [31:0] grp_fu_175_p2;
wire   [1:0] tmp_5_fu_445_p3;
reg   [1:0] tmp_5_reg_631;
reg   [1:0] tmp_5_reg_631_pp0_iter16_reg;
wire   [31:0] bitcast_ln822_1_fu_461_p1;
wire   [31:0] select_ln809_fu_465_p3;
wire   [31:0] bitcast_ln351_5_fu_479_p1;
wire   [31:0] bitcast_ln351_4_fu_490_p1;
wire   [31:0] bitcast_ln351_3_fu_501_p1;
wire   [31:0] bitcast_ln351_2_fu_512_p1;
wire   [31:0] bitcast_ln351_1_fu_523_p1;
wire   [31:0] bitcast_ln351_fu_534_p1;
reg   [31:0] grp_atan2_generic_float_s_fu_169_y_in;
reg   [31:0] grp_atan2_generic_float_s_fu_169_x_in;
reg    grp_atan2_generic_float_s_fu_169_ap_ce;
reg    ap_predicate_op77_call_state2;
reg    ap_predicate_op78_call_state2;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call0;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call0;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call0;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call0;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call0;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call0;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call0;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call0;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call0;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call0;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call0;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call0;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call0;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call0;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call0;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call0;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call0;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call0;
wire    ap_block_pp0_stage0_11001_ignoreCallOp77;
wire   [31:0] ap_phi_reg_pp0_iter0_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter1_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter2_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter3_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter4_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter5_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter6_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter7_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter8_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter9_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter10_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter11_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter12_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter13_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter14_c_reg_88;
reg   [31:0] ap_phi_reg_pp0_iter15_c_reg_88;
reg   [31:0] ap_phi_mux_UnifiedRetVal_phi_fu_114_p42;
wire   [31:0] ap_phi_reg_pp0_iter0_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter1_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter2_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter3_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter4_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter5_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter6_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter7_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter8_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter9_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter10_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter11_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter12_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter13_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter14_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter15_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102;
reg   [31:0] ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102;
wire   [31:0] bitcast_ln826_1_fu_548_p1;
wire   [31:0] grp_fu_180_p2;
wire    ap_block_pp0_stage0;
wire   [31:0] tmp_10_fu_187_p0;
wire   [31:0] tmp_10_fu_187_p1;
wire   [31:0] data_V_fu_197_p1;
wire   [31:0] data_V_2_fu_223_p1;
wire   [7:0] tmp_79_fu_235_p4;
wire   [0:0] icmp_ln757_fu_249_p2;
wire   [22:0] tmp_80_fu_245_p1;
wire   [0:0] xor_ln18_fu_255_p2;
wire   [7:0] tmp_fu_209_p4;
wire   [0:0] icmp_ln757_1_fu_273_p2;
wire   [22:0] tmp_78_fu_219_p1;
wire   [0:0] icmp_ln828_1_fu_285_p2;
wire   [0:0] xor_ln18_1_fu_279_p2;
wire   [7:0] trunc_ln766_fu_315_p1;
wire   [14:0] tmp_3_fu_325_p4;
wire   [7:0] or_ln766_fu_319_p2;
wire   [22:0] tmp_4_fu_335_p3;
wire   [30:0] p_Result_38_fu_361_p1;
wire   [31:0] zext_ln368_fu_365_p1;
wire   [30:0] p_Result_39_fu_374_p1;
wire   [31:0] zext_ln368_1_fu_378_p1;
wire   [31:0] p_Result_40_fu_387_p3;
wire   [31:0] p_Result_41_fu_395_p3;
wire   [0:0] icmp_ln746_fu_409_p2;
wire   [0:0] icmp_ln746_1_fu_421_p2;
wire   [0:0] or_ln746_fu_415_p2;
wire   [0:0] or_ln746_1_fu_427_p2;
wire   [0:0] and_ln746_fu_433_p2;
wire   [0:0] tmp_10_fu_187_p2;
wire   [31:0] bitcast_ln822_fu_451_p1;
wire   [31:0] xor_ln822_fu_455_p2;
wire   [31:0] p_Result_37_fu_472_p3;
wire   [31:0] p_Result_36_fu_483_p3;
wire   [31:0] p_Result_35_fu_494_p3;
wire   [31:0] p_Result_34_fu_505_p3;
wire   [31:0] p_Result_33_fu_516_p3;
wire   [31:0] p_Result_32_fu_527_p3;
wire   [31:0] bitcast_ln826_fu_538_p1;
wire   [31:0] xor_ln826_fu_542_p2;
reg    grp_fu_175_ce;
reg    grp_fu_180_ce;
wire    ap_block_pp0_stage0_00001;
reg    ap_ce_reg;
reg   [31:0] y_in_int_reg;
reg   [31:0] x_in_int_reg;
reg   [31:0] ap_return_int_reg;
reg    ap_condition_845;
reg    ap_condition_778;
reg    ap_condition_382;
reg    ap_condition_810;
reg    ap_condition_815;
reg    ap_condition_819;
reg    ap_condition_824;
reg    ap_condition_827;
reg    ap_condition_830;
reg    ap_condition_858;
reg    ap_condition_860;
reg    ap_condition_863;
reg    ap_condition_415;
reg    ap_condition_420;
reg    ap_condition_461;
reg    ap_condition_456;
reg    ap_condition_451;
reg    ap_condition_442;
reg    ap_condition_437;
reg    ap_condition_425;
reg    ap_condition_782;

apskdemod_atan2_generic_float_s grp_atan2_generic_float_s_fu_169(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .y_in(grp_atan2_generic_float_s_fu_169_y_in),
    .x_in(grp_atan2_generic_float_s_fu_169_x_in),
    .ap_return(grp_atan2_generic_float_s_fu_169_ap_return),
    .ap_ce(grp_atan2_generic_float_s_fu_169_ap_ce)
);

apskdemod_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_3_full_dsp_0_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1070141403),
    .din1(reg_191),
    .ce(grp_fu_175_ce),
    .dout(grp_fu_175_p2)
);

apskdemod_fsub_32ns_32ns_32_3_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_3_full_dsp_0_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1078530011),
    .din1(ap_phi_reg_pp0_iter15_c_reg_88),
    .ce(grp_fu_180_ce),
    .dout(grp_fu_180_p2)
);

apskdemod_fcmp_32ns_32ns_1_1_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_1_no_dsp_0_U59(
    .din0(tmp_10_fu_187_p0),
    .din1(tmp_10_fu_187_p1),
    .opcode(5'd2),
    .dout(tmp_10_fu_187_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        if ((1'b1 == ap_condition_778)) begin
            ap_phi_reg_pp0_iter13_c_reg_88 <= reg_191;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter13_c_reg_88 <= ap_phi_reg_pp0_iter12_c_reg_88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        if ((1'b1 == ap_condition_382)) begin
            ap_phi_reg_pp0_iter15_c_reg_88 <= grp_fu_175_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter15_c_reg_88 <= ap_phi_reg_pp0_iter14_c_reg_88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        if ((1'b1 == ap_condition_863)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd0;
        end else if ((1'b1 == ap_condition_860)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd1061752795;
        end else if ((1'b1 == ap_condition_858)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter15_c_reg_88;
        end else if ((1'b1 == ap_condition_830)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd2147483648;
        end else if ((1'b1 == ap_condition_827)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd1078530011;
        end else if ((1'b1 == ap_condition_824)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd3226013659;
        end else if ((1'b1 == ap_condition_819)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd3209236443;
        end else if ((1'b1 == ap_condition_815)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd1075235812;
        end else if ((1'b1 == ap_condition_810)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= 32'd3222719460;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter15_UnifiedRetVal_reg_102;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        if ((1'b1 == ap_condition_425)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= bitcast_ln351_5_fu_479_p1;
        end else if ((1'b1 == ap_condition_437)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= bitcast_ln351_4_fu_490_p1;
        end else if ((1'b1 == ap_condition_442)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= bitcast_ln351_3_fu_501_p1;
        end else if ((1'b1 == ap_condition_451)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= bitcast_ln351_2_fu_512_p1;
        end else if ((1'b1 == ap_condition_456)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= bitcast_ln351_1_fu_523_p1;
        end else if ((1'b1 == ap_condition_461)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= bitcast_ln351_fu_534_p1;
        end else if ((1'b1 == ap_condition_420)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= select_ln809_fu_465_p3;
        end else if ((1'b1 == ap_condition_415)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= bitcast_ln822_1_fu_461_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_102;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (or_ln757_1_fu_291_p2 == 1'd0) & (or_ln757_fu_267_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (or_ln757_fu_267_p2 == 1'd0)))) begin
        ap_phi_reg_pp0_iter1_UnifiedRetVal_reg_102 <= 32'd2147483647;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter1_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_reg_102;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        if ((1'b1 == ap_condition_782)) begin
            ap_phi_reg_pp0_iter1_c_reg_88 <= 32'd1061752795;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_c_reg_88 <= ap_phi_reg_pp0_iter0_c_reg_88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln18_1_fu_355_p2) & (1'd0 == and_ln18_fu_349_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln766_fu_343_p2 == 1'd0) & (icmp_ln824_2_fu_309_p2 == 1'd0) & (1'b1 == ap_ce_reg) & (icmp_ln824_fu_297_p2 == 1'd0) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1))) begin
        a_reg_606[30 : 0] <= a_fu_369_p1[30 : 0];
        b_reg_612[30 : 0] <= b_fu_382_p1[30 : 0];
        icmp_ln824_3_reg_618 <= icmp_ln824_3_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln766_fu_343_p2 == 1'd0) & (icmp_ln824_2_fu_309_p2 == 1'd0) & (1'b1 == ap_ce_reg) & (icmp_ln824_fu_297_p2 == 1'd0) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1))) begin
        and_ln18_1_reg_602 <= and_ln18_1_fu_355_p2;
        and_ln18_reg_598 <= and_ln18_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        and_ln18_1_reg_602_pp0_iter10_reg <= and_ln18_1_reg_602_pp0_iter9_reg;
        and_ln18_1_reg_602_pp0_iter11_reg <= and_ln18_1_reg_602_pp0_iter10_reg;
        and_ln18_1_reg_602_pp0_iter12_reg <= and_ln18_1_reg_602_pp0_iter11_reg;
        and_ln18_1_reg_602_pp0_iter13_reg <= and_ln18_1_reg_602_pp0_iter12_reg;
        and_ln18_1_reg_602_pp0_iter14_reg <= and_ln18_1_reg_602_pp0_iter13_reg;
        and_ln18_1_reg_602_pp0_iter15_reg <= and_ln18_1_reg_602_pp0_iter14_reg;
        and_ln18_1_reg_602_pp0_iter16_reg <= and_ln18_1_reg_602_pp0_iter15_reg;
        and_ln18_1_reg_602_pp0_iter1_reg <= and_ln18_1_reg_602;
        and_ln18_1_reg_602_pp0_iter2_reg <= and_ln18_1_reg_602_pp0_iter1_reg;
        and_ln18_1_reg_602_pp0_iter3_reg <= and_ln18_1_reg_602_pp0_iter2_reg;
        and_ln18_1_reg_602_pp0_iter4_reg <= and_ln18_1_reg_602_pp0_iter3_reg;
        and_ln18_1_reg_602_pp0_iter5_reg <= and_ln18_1_reg_602_pp0_iter4_reg;
        and_ln18_1_reg_602_pp0_iter6_reg <= and_ln18_1_reg_602_pp0_iter5_reg;
        and_ln18_1_reg_602_pp0_iter7_reg <= and_ln18_1_reg_602_pp0_iter6_reg;
        and_ln18_1_reg_602_pp0_iter8_reg <= and_ln18_1_reg_602_pp0_iter7_reg;
        and_ln18_1_reg_602_pp0_iter9_reg <= and_ln18_1_reg_602_pp0_iter8_reg;
        and_ln18_reg_598_pp0_iter10_reg <= and_ln18_reg_598_pp0_iter9_reg;
        and_ln18_reg_598_pp0_iter11_reg <= and_ln18_reg_598_pp0_iter10_reg;
        and_ln18_reg_598_pp0_iter12_reg <= and_ln18_reg_598_pp0_iter11_reg;
        and_ln18_reg_598_pp0_iter13_reg <= and_ln18_reg_598_pp0_iter12_reg;
        and_ln18_reg_598_pp0_iter14_reg <= and_ln18_reg_598_pp0_iter13_reg;
        and_ln18_reg_598_pp0_iter15_reg <= and_ln18_reg_598_pp0_iter14_reg;
        and_ln18_reg_598_pp0_iter16_reg <= and_ln18_reg_598_pp0_iter15_reg;
        and_ln18_reg_598_pp0_iter1_reg <= and_ln18_reg_598;
        and_ln18_reg_598_pp0_iter2_reg <= and_ln18_reg_598_pp0_iter1_reg;
        and_ln18_reg_598_pp0_iter3_reg <= and_ln18_reg_598_pp0_iter2_reg;
        and_ln18_reg_598_pp0_iter4_reg <= and_ln18_reg_598_pp0_iter3_reg;
        and_ln18_reg_598_pp0_iter5_reg <= and_ln18_reg_598_pp0_iter4_reg;
        and_ln18_reg_598_pp0_iter6_reg <= and_ln18_reg_598_pp0_iter5_reg;
        and_ln18_reg_598_pp0_iter7_reg <= and_ln18_reg_598_pp0_iter6_reg;
        and_ln18_reg_598_pp0_iter8_reg <= and_ln18_reg_598_pp0_iter7_reg;
        and_ln18_reg_598_pp0_iter9_reg <= and_ln18_reg_598_pp0_iter8_reg;
        and_ln746_1_reg_622_pp0_iter10_reg <= and_ln746_1_reg_622_pp0_iter9_reg;
        and_ln746_1_reg_622_pp0_iter11_reg <= and_ln746_1_reg_622_pp0_iter10_reg;
        and_ln746_1_reg_622_pp0_iter12_reg <= and_ln746_1_reg_622_pp0_iter11_reg;
        and_ln746_1_reg_622_pp0_iter13_reg <= and_ln746_1_reg_622_pp0_iter12_reg;
        and_ln746_1_reg_622_pp0_iter1_reg <= and_ln746_1_reg_622;
        and_ln746_1_reg_622_pp0_iter2_reg <= and_ln746_1_reg_622_pp0_iter1_reg;
        and_ln746_1_reg_622_pp0_iter3_reg <= and_ln746_1_reg_622_pp0_iter2_reg;
        and_ln746_1_reg_622_pp0_iter4_reg <= and_ln746_1_reg_622_pp0_iter3_reg;
        and_ln746_1_reg_622_pp0_iter5_reg <= and_ln746_1_reg_622_pp0_iter4_reg;
        and_ln746_1_reg_622_pp0_iter6_reg <= and_ln746_1_reg_622_pp0_iter5_reg;
        and_ln746_1_reg_622_pp0_iter7_reg <= and_ln746_1_reg_622_pp0_iter6_reg;
        and_ln746_1_reg_622_pp0_iter8_reg <= and_ln746_1_reg_622_pp0_iter7_reg;
        and_ln746_1_reg_622_pp0_iter9_reg <= and_ln746_1_reg_622_pp0_iter8_reg;
        and_ln762_reg_586_pp0_iter10_reg <= and_ln762_reg_586_pp0_iter9_reg;
        and_ln762_reg_586_pp0_iter11_reg <= and_ln762_reg_586_pp0_iter10_reg;
        and_ln762_reg_586_pp0_iter12_reg <= and_ln762_reg_586_pp0_iter11_reg;
        and_ln762_reg_586_pp0_iter13_reg <= and_ln762_reg_586_pp0_iter12_reg;
        and_ln762_reg_586_pp0_iter14_reg <= and_ln762_reg_586_pp0_iter13_reg;
        and_ln762_reg_586_pp0_iter15_reg <= and_ln762_reg_586_pp0_iter14_reg;
        and_ln762_reg_586_pp0_iter1_reg <= and_ln762_reg_586;
        and_ln762_reg_586_pp0_iter2_reg <= and_ln762_reg_586_pp0_iter1_reg;
        and_ln762_reg_586_pp0_iter3_reg <= and_ln762_reg_586_pp0_iter2_reg;
        and_ln762_reg_586_pp0_iter4_reg <= and_ln762_reg_586_pp0_iter3_reg;
        and_ln762_reg_586_pp0_iter5_reg <= and_ln762_reg_586_pp0_iter4_reg;
        and_ln762_reg_586_pp0_iter6_reg <= and_ln762_reg_586_pp0_iter5_reg;
        and_ln762_reg_586_pp0_iter7_reg <= and_ln762_reg_586_pp0_iter6_reg;
        and_ln762_reg_586_pp0_iter8_reg <= and_ln762_reg_586_pp0_iter7_reg;
        and_ln762_reg_586_pp0_iter9_reg <= and_ln762_reg_586_pp0_iter8_reg;
        ap_phi_reg_pp0_iter10_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter9_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter10_c_reg_88 <= ap_phi_reg_pp0_iter9_c_reg_88;
        ap_phi_reg_pp0_iter11_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter10_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter11_c_reg_88 <= ap_phi_reg_pp0_iter10_c_reg_88;
        ap_phi_reg_pp0_iter12_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter11_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter12_c_reg_88 <= ap_phi_reg_pp0_iter11_c_reg_88;
        ap_phi_reg_pp0_iter13_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter12_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter14_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter13_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter14_c_reg_88 <= ap_phi_reg_pp0_iter13_c_reg_88;
        ap_phi_reg_pp0_iter15_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter14_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter2_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter1_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter2_c_reg_88 <= ap_phi_reg_pp0_iter1_c_reg_88;
        ap_phi_reg_pp0_iter3_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter2_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter3_c_reg_88 <= ap_phi_reg_pp0_iter2_c_reg_88;
        ap_phi_reg_pp0_iter4_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter3_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter4_c_reg_88 <= ap_phi_reg_pp0_iter3_c_reg_88;
        ap_phi_reg_pp0_iter5_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter4_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter5_c_reg_88 <= ap_phi_reg_pp0_iter4_c_reg_88;
        ap_phi_reg_pp0_iter6_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter5_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter6_c_reg_88 <= ap_phi_reg_pp0_iter5_c_reg_88;
        ap_phi_reg_pp0_iter7_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter6_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter7_c_reg_88 <= ap_phi_reg_pp0_iter6_c_reg_88;
        ap_phi_reg_pp0_iter8_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter7_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter8_c_reg_88 <= ap_phi_reg_pp0_iter7_c_reg_88;
        ap_phi_reg_pp0_iter9_UnifiedRetVal_reg_102 <= ap_phi_reg_pp0_iter8_UnifiedRetVal_reg_102;
        ap_phi_reg_pp0_iter9_c_reg_88 <= ap_phi_reg_pp0_iter8_c_reg_88;
        c_reg_88 <= ap_phi_reg_pp0_iter15_c_reg_88;
        icmp_ln766_reg_594_pp0_iter10_reg <= icmp_ln766_reg_594_pp0_iter9_reg;
        icmp_ln766_reg_594_pp0_iter11_reg <= icmp_ln766_reg_594_pp0_iter10_reg;
        icmp_ln766_reg_594_pp0_iter12_reg <= icmp_ln766_reg_594_pp0_iter11_reg;
        icmp_ln766_reg_594_pp0_iter13_reg <= icmp_ln766_reg_594_pp0_iter12_reg;
        icmp_ln766_reg_594_pp0_iter14_reg <= icmp_ln766_reg_594_pp0_iter13_reg;
        icmp_ln766_reg_594_pp0_iter15_reg <= icmp_ln766_reg_594_pp0_iter14_reg;
        icmp_ln766_reg_594_pp0_iter16_reg <= icmp_ln766_reg_594_pp0_iter15_reg;
        icmp_ln766_reg_594_pp0_iter1_reg <= icmp_ln766_reg_594;
        icmp_ln766_reg_594_pp0_iter2_reg <= icmp_ln766_reg_594_pp0_iter1_reg;
        icmp_ln766_reg_594_pp0_iter3_reg <= icmp_ln766_reg_594_pp0_iter2_reg;
        icmp_ln766_reg_594_pp0_iter4_reg <= icmp_ln766_reg_594_pp0_iter3_reg;
        icmp_ln766_reg_594_pp0_iter5_reg <= icmp_ln766_reg_594_pp0_iter4_reg;
        icmp_ln766_reg_594_pp0_iter6_reg <= icmp_ln766_reg_594_pp0_iter5_reg;
        icmp_ln766_reg_594_pp0_iter7_reg <= icmp_ln766_reg_594_pp0_iter6_reg;
        icmp_ln766_reg_594_pp0_iter8_reg <= icmp_ln766_reg_594_pp0_iter7_reg;
        icmp_ln766_reg_594_pp0_iter9_reg <= icmp_ln766_reg_594_pp0_iter8_reg;
        icmp_ln824_2_reg_590_pp0_iter10_reg <= icmp_ln824_2_reg_590_pp0_iter9_reg;
        icmp_ln824_2_reg_590_pp0_iter11_reg <= icmp_ln824_2_reg_590_pp0_iter10_reg;
        icmp_ln824_2_reg_590_pp0_iter12_reg <= icmp_ln824_2_reg_590_pp0_iter11_reg;
        icmp_ln824_2_reg_590_pp0_iter13_reg <= icmp_ln824_2_reg_590_pp0_iter12_reg;
        icmp_ln824_2_reg_590_pp0_iter14_reg <= icmp_ln824_2_reg_590_pp0_iter13_reg;
        icmp_ln824_2_reg_590_pp0_iter15_reg <= icmp_ln824_2_reg_590_pp0_iter14_reg;
        icmp_ln824_2_reg_590_pp0_iter16_reg <= icmp_ln824_2_reg_590_pp0_iter15_reg;
        icmp_ln824_2_reg_590_pp0_iter1_reg <= icmp_ln824_2_reg_590;
        icmp_ln824_2_reg_590_pp0_iter2_reg <= icmp_ln824_2_reg_590_pp0_iter1_reg;
        icmp_ln824_2_reg_590_pp0_iter3_reg <= icmp_ln824_2_reg_590_pp0_iter2_reg;
        icmp_ln824_2_reg_590_pp0_iter4_reg <= icmp_ln824_2_reg_590_pp0_iter3_reg;
        icmp_ln824_2_reg_590_pp0_iter5_reg <= icmp_ln824_2_reg_590_pp0_iter4_reg;
        icmp_ln824_2_reg_590_pp0_iter6_reg <= icmp_ln824_2_reg_590_pp0_iter5_reg;
        icmp_ln824_2_reg_590_pp0_iter7_reg <= icmp_ln824_2_reg_590_pp0_iter6_reg;
        icmp_ln824_2_reg_590_pp0_iter8_reg <= icmp_ln824_2_reg_590_pp0_iter7_reg;
        icmp_ln824_2_reg_590_pp0_iter9_reg <= icmp_ln824_2_reg_590_pp0_iter8_reg;
        icmp_ln824_3_reg_618_pp0_iter10_reg <= icmp_ln824_3_reg_618_pp0_iter9_reg;
        icmp_ln824_3_reg_618_pp0_iter11_reg <= icmp_ln824_3_reg_618_pp0_iter10_reg;
        icmp_ln824_3_reg_618_pp0_iter12_reg <= icmp_ln824_3_reg_618_pp0_iter11_reg;
        icmp_ln824_3_reg_618_pp0_iter13_reg <= icmp_ln824_3_reg_618_pp0_iter12_reg;
        icmp_ln824_3_reg_618_pp0_iter1_reg <= icmp_ln824_3_reg_618;
        icmp_ln824_3_reg_618_pp0_iter2_reg <= icmp_ln824_3_reg_618_pp0_iter1_reg;
        icmp_ln824_3_reg_618_pp0_iter3_reg <= icmp_ln824_3_reg_618_pp0_iter2_reg;
        icmp_ln824_3_reg_618_pp0_iter4_reg <= icmp_ln824_3_reg_618_pp0_iter3_reg;
        icmp_ln824_3_reg_618_pp0_iter5_reg <= icmp_ln824_3_reg_618_pp0_iter4_reg;
        icmp_ln824_3_reg_618_pp0_iter6_reg <= icmp_ln824_3_reg_618_pp0_iter5_reg;
        icmp_ln824_3_reg_618_pp0_iter7_reg <= icmp_ln824_3_reg_618_pp0_iter6_reg;
        icmp_ln824_3_reg_618_pp0_iter8_reg <= icmp_ln824_3_reg_618_pp0_iter7_reg;
        icmp_ln824_3_reg_618_pp0_iter9_reg <= icmp_ln824_3_reg_618_pp0_iter8_reg;
        icmp_ln824_reg_582_pp0_iter10_reg <= icmp_ln824_reg_582_pp0_iter9_reg;
        icmp_ln824_reg_582_pp0_iter11_reg <= icmp_ln824_reg_582_pp0_iter10_reg;
        icmp_ln824_reg_582_pp0_iter12_reg <= icmp_ln824_reg_582_pp0_iter11_reg;
        icmp_ln824_reg_582_pp0_iter13_reg <= icmp_ln824_reg_582_pp0_iter12_reg;
        icmp_ln824_reg_582_pp0_iter14_reg <= icmp_ln824_reg_582_pp0_iter13_reg;
        icmp_ln824_reg_582_pp0_iter15_reg <= icmp_ln824_reg_582_pp0_iter14_reg;
        icmp_ln824_reg_582_pp0_iter16_reg <= icmp_ln824_reg_582_pp0_iter15_reg;
        icmp_ln824_reg_582_pp0_iter1_reg <= icmp_ln824_reg_582;
        icmp_ln824_reg_582_pp0_iter2_reg <= icmp_ln824_reg_582_pp0_iter1_reg;
        icmp_ln824_reg_582_pp0_iter3_reg <= icmp_ln824_reg_582_pp0_iter2_reg;
        icmp_ln824_reg_582_pp0_iter4_reg <= icmp_ln824_reg_582_pp0_iter3_reg;
        icmp_ln824_reg_582_pp0_iter5_reg <= icmp_ln824_reg_582_pp0_iter4_reg;
        icmp_ln824_reg_582_pp0_iter6_reg <= icmp_ln824_reg_582_pp0_iter5_reg;
        icmp_ln824_reg_582_pp0_iter7_reg <= icmp_ln824_reg_582_pp0_iter6_reg;
        icmp_ln824_reg_582_pp0_iter8_reg <= icmp_ln824_reg_582_pp0_iter7_reg;
        icmp_ln824_reg_582_pp0_iter9_reg <= icmp_ln824_reg_582_pp0_iter8_reg;
        icmp_ln828_reg_570 <= icmp_ln828_fu_261_p2;
        icmp_ln828_reg_570_pp0_iter10_reg <= icmp_ln828_reg_570_pp0_iter9_reg;
        icmp_ln828_reg_570_pp0_iter11_reg <= icmp_ln828_reg_570_pp0_iter10_reg;
        icmp_ln828_reg_570_pp0_iter12_reg <= icmp_ln828_reg_570_pp0_iter11_reg;
        icmp_ln828_reg_570_pp0_iter13_reg <= icmp_ln828_reg_570_pp0_iter12_reg;
        icmp_ln828_reg_570_pp0_iter14_reg <= icmp_ln828_reg_570_pp0_iter13_reg;
        icmp_ln828_reg_570_pp0_iter15_reg <= icmp_ln828_reg_570_pp0_iter14_reg;
        icmp_ln828_reg_570_pp0_iter1_reg <= icmp_ln828_reg_570;
        icmp_ln828_reg_570_pp0_iter2_reg <= icmp_ln828_reg_570_pp0_iter1_reg;
        icmp_ln828_reg_570_pp0_iter3_reg <= icmp_ln828_reg_570_pp0_iter2_reg;
        icmp_ln828_reg_570_pp0_iter4_reg <= icmp_ln828_reg_570_pp0_iter3_reg;
        icmp_ln828_reg_570_pp0_iter5_reg <= icmp_ln828_reg_570_pp0_iter4_reg;
        icmp_ln828_reg_570_pp0_iter6_reg <= icmp_ln828_reg_570_pp0_iter5_reg;
        icmp_ln828_reg_570_pp0_iter7_reg <= icmp_ln828_reg_570_pp0_iter6_reg;
        icmp_ln828_reg_570_pp0_iter8_reg <= icmp_ln828_reg_570_pp0_iter7_reg;
        icmp_ln828_reg_570_pp0_iter9_reg <= icmp_ln828_reg_570_pp0_iter8_reg;
        or_ln757_1_reg_578_pp0_iter10_reg <= or_ln757_1_reg_578_pp0_iter9_reg;
        or_ln757_1_reg_578_pp0_iter11_reg <= or_ln757_1_reg_578_pp0_iter10_reg;
        or_ln757_1_reg_578_pp0_iter12_reg <= or_ln757_1_reg_578_pp0_iter11_reg;
        or_ln757_1_reg_578_pp0_iter13_reg <= or_ln757_1_reg_578_pp0_iter12_reg;
        or_ln757_1_reg_578_pp0_iter14_reg <= or_ln757_1_reg_578_pp0_iter13_reg;
        or_ln757_1_reg_578_pp0_iter15_reg <= or_ln757_1_reg_578_pp0_iter14_reg;
        or_ln757_1_reg_578_pp0_iter16_reg <= or_ln757_1_reg_578_pp0_iter15_reg;
        or_ln757_1_reg_578_pp0_iter1_reg <= or_ln757_1_reg_578;
        or_ln757_1_reg_578_pp0_iter2_reg <= or_ln757_1_reg_578_pp0_iter1_reg;
        or_ln757_1_reg_578_pp0_iter3_reg <= or_ln757_1_reg_578_pp0_iter2_reg;
        or_ln757_1_reg_578_pp0_iter4_reg <= or_ln757_1_reg_578_pp0_iter3_reg;
        or_ln757_1_reg_578_pp0_iter5_reg <= or_ln757_1_reg_578_pp0_iter4_reg;
        or_ln757_1_reg_578_pp0_iter6_reg <= or_ln757_1_reg_578_pp0_iter5_reg;
        or_ln757_1_reg_578_pp0_iter7_reg <= or_ln757_1_reg_578_pp0_iter6_reg;
        or_ln757_1_reg_578_pp0_iter8_reg <= or_ln757_1_reg_578_pp0_iter7_reg;
        or_ln757_1_reg_578_pp0_iter9_reg <= or_ln757_1_reg_578_pp0_iter8_reg;
        or_ln757_reg_574 <= or_ln757_fu_267_p2;
        or_ln757_reg_574_pp0_iter10_reg <= or_ln757_reg_574_pp0_iter9_reg;
        or_ln757_reg_574_pp0_iter11_reg <= or_ln757_reg_574_pp0_iter10_reg;
        or_ln757_reg_574_pp0_iter12_reg <= or_ln757_reg_574_pp0_iter11_reg;
        or_ln757_reg_574_pp0_iter13_reg <= or_ln757_reg_574_pp0_iter12_reg;
        or_ln757_reg_574_pp0_iter14_reg <= or_ln757_reg_574_pp0_iter13_reg;
        or_ln757_reg_574_pp0_iter15_reg <= or_ln757_reg_574_pp0_iter14_reg;
        or_ln757_reg_574_pp0_iter16_reg <= or_ln757_reg_574_pp0_iter15_reg;
        or_ln757_reg_574_pp0_iter1_reg <= or_ln757_reg_574;
        or_ln757_reg_574_pp0_iter2_reg <= or_ln757_reg_574_pp0_iter1_reg;
        or_ln757_reg_574_pp0_iter3_reg <= or_ln757_reg_574_pp0_iter2_reg;
        or_ln757_reg_574_pp0_iter4_reg <= or_ln757_reg_574_pp0_iter3_reg;
        or_ln757_reg_574_pp0_iter5_reg <= or_ln757_reg_574_pp0_iter4_reg;
        or_ln757_reg_574_pp0_iter6_reg <= or_ln757_reg_574_pp0_iter5_reg;
        or_ln757_reg_574_pp0_iter7_reg <= or_ln757_reg_574_pp0_iter6_reg;
        or_ln757_reg_574_pp0_iter8_reg <= or_ln757_reg_574_pp0_iter7_reg;
        or_ln757_reg_574_pp0_iter9_reg <= or_ln757_reg_574_pp0_iter8_reg;
        p_Result_31_reg_558 <= data_V_2_fu_223_p1[32'd31];
        p_Result_31_reg_558_pp0_iter10_reg <= p_Result_31_reg_558_pp0_iter9_reg;
        p_Result_31_reg_558_pp0_iter11_reg <= p_Result_31_reg_558_pp0_iter10_reg;
        p_Result_31_reg_558_pp0_iter12_reg <= p_Result_31_reg_558_pp0_iter11_reg;
        p_Result_31_reg_558_pp0_iter13_reg <= p_Result_31_reg_558_pp0_iter12_reg;
        p_Result_31_reg_558_pp0_iter14_reg <= p_Result_31_reg_558_pp0_iter13_reg;
        p_Result_31_reg_558_pp0_iter15_reg <= p_Result_31_reg_558_pp0_iter14_reg;
        p_Result_31_reg_558_pp0_iter1_reg <= p_Result_31_reg_558;
        p_Result_31_reg_558_pp0_iter2_reg <= p_Result_31_reg_558_pp0_iter1_reg;
        p_Result_31_reg_558_pp0_iter3_reg <= p_Result_31_reg_558_pp0_iter2_reg;
        p_Result_31_reg_558_pp0_iter4_reg <= p_Result_31_reg_558_pp0_iter3_reg;
        p_Result_31_reg_558_pp0_iter5_reg <= p_Result_31_reg_558_pp0_iter4_reg;
        p_Result_31_reg_558_pp0_iter6_reg <= p_Result_31_reg_558_pp0_iter5_reg;
        p_Result_31_reg_558_pp0_iter7_reg <= p_Result_31_reg_558_pp0_iter6_reg;
        p_Result_31_reg_558_pp0_iter8_reg <= p_Result_31_reg_558_pp0_iter7_reg;
        p_Result_31_reg_558_pp0_iter9_reg <= p_Result_31_reg_558_pp0_iter8_reg;
        p_Result_s_reg_553 <= data_V_fu_197_p1[32'd31];
        p_Result_s_reg_553_pp0_iter10_reg <= p_Result_s_reg_553_pp0_iter9_reg;
        p_Result_s_reg_553_pp0_iter11_reg <= p_Result_s_reg_553_pp0_iter10_reg;
        p_Result_s_reg_553_pp0_iter12_reg <= p_Result_s_reg_553_pp0_iter11_reg;
        p_Result_s_reg_553_pp0_iter13_reg <= p_Result_s_reg_553_pp0_iter12_reg;
        p_Result_s_reg_553_pp0_iter14_reg <= p_Result_s_reg_553_pp0_iter13_reg;
        p_Result_s_reg_553_pp0_iter15_reg <= p_Result_s_reg_553_pp0_iter14_reg;
        p_Result_s_reg_553_pp0_iter1_reg <= p_Result_s_reg_553;
        p_Result_s_reg_553_pp0_iter2_reg <= p_Result_s_reg_553_pp0_iter1_reg;
        p_Result_s_reg_553_pp0_iter3_reg <= p_Result_s_reg_553_pp0_iter2_reg;
        p_Result_s_reg_553_pp0_iter4_reg <= p_Result_s_reg_553_pp0_iter3_reg;
        p_Result_s_reg_553_pp0_iter5_reg <= p_Result_s_reg_553_pp0_iter4_reg;
        p_Result_s_reg_553_pp0_iter6_reg <= p_Result_s_reg_553_pp0_iter5_reg;
        p_Result_s_reg_553_pp0_iter7_reg <= p_Result_s_reg_553_pp0_iter6_reg;
        p_Result_s_reg_553_pp0_iter8_reg <= p_Result_s_reg_553_pp0_iter7_reg;
        p_Result_s_reg_553_pp0_iter9_reg <= p_Result_s_reg_553_pp0_iter8_reg;
        tmp_5_reg_631_pp0_iter16_reg <= tmp_5_reg_631;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln18_1_fu_355_p2) & (1'd0 == and_ln18_fu_349_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln824_3_fu_403_p2 == 1'd0) & (icmp_ln766_fu_343_p2 == 1'd0) & (icmp_ln824_2_fu_309_p2 == 1'd0) & (1'b1 == ap_ce_reg) & (icmp_ln824_fu_297_p2 == 1'd0) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1))) begin
        and_ln746_1_reg_622 <= and_ln746_1_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (icmp_ln824_fu_297_p2 == 1'd1) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1))) begin
        and_ln762_reg_586 <= and_ln762_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= ap_phi_mux_UnifiedRetVal_phi_fu_114_p42;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (((icmp_ln824_fu_297_p2 == 1'd0) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1)) | ((1'd0 == and_ln762_fu_303_p2) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1) & (icmp_ln828_fu_261_p2 == 1'd0))))) begin
        icmp_ln766_reg_594 <= icmp_ln766_fu_343_p2;
        icmp_ln824_2_reg_590 <= icmp_ln824_2_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1))) begin
        icmp_ln824_reg_582 <= icmp_ln824_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & (or_ln757_fu_267_p2 == 1'd1))) begin
        or_ln757_1_reg_578 <= or_ln757_1_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln824_3_reg_618_pp0_iter10_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter10_reg == 1'd0) & (icmp_ln766_reg_594_pp0_iter10_reg == 1'd0) & (1'd0 == and_ln746_1_reg_622_pp0_iter10_reg) & (1'd0 == and_ln18_1_reg_602_pp0_iter10_reg) & (1'd0 == and_ln18_reg_598_pp0_iter10_reg) & (icmp_ln824_reg_582_pp0_iter10_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter10_reg == 1'd1) & (or_ln757_reg_574_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)) | ((icmp_ln824_3_reg_618_pp0_iter10_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter10_reg == 1'd0) & (icmp_ln766_reg_594_pp0_iter10_reg == 1'd0) & (1'd0 == and_ln18_1_reg_602_pp0_iter10_reg) & (1'd0 == and_ln18_reg_598_pp0_iter10_reg) & (icmp_ln824_reg_582_pp0_iter10_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter10_reg == 1'd1) & (1'd1 == and_ln746_1_reg_622_pp0_iter10_reg) & (or_ln757_reg_574_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)))) begin
        reg_191 <= grp_atan2_generic_float_s_fu_169_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (1'b1 == ap_ce_reg) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1))) begin
        tmp_5_reg_631 <= tmp_5_fu_445_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        x_in_int_reg <= x_in;
        y_in_int_reg <= y_in;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_845)) begin
        if ((tmp_5_reg_631_pp0_iter16_reg == 2'd2)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_114_p42 = grp_fu_180_p2;
        end else if ((tmp_5_reg_631_pp0_iter16_reg == 2'd3)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_114_p42 = bitcast_ln826_1_fu_548_p1;
        end else begin
            ap_phi_mux_UnifiedRetVal_phi_fu_114_p42 = ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102;
        end
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_114_p42 = ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_102;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_114_p42;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp77) & (1'b1 == ap_ce_reg))) begin
        grp_atan2_generic_float_s_fu_169_ap_ce = 1'b1;
    end else begin
        grp_atan2_generic_float_s_fu_169_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if ((ap_predicate_op78_call_state2 == 1'b1)) begin
            grp_atan2_generic_float_s_fu_169_x_in = a_reg_606;
        end else if ((ap_predicate_op77_call_state2 == 1'b1)) begin
            grp_atan2_generic_float_s_fu_169_x_in = b_reg_612;
        end else begin
            grp_atan2_generic_float_s_fu_169_x_in = 'bx;
        end
    end else begin
        grp_atan2_generic_float_s_fu_169_x_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if ((ap_predicate_op78_call_state2 == 1'b1)) begin
            grp_atan2_generic_float_s_fu_169_y_in = b_reg_612;
        end else if ((ap_predicate_op77_call_state2 == 1'b1)) begin
            grp_atan2_generic_float_s_fu_169_y_in = a_reg_606;
        end else begin
            grp_atan2_generic_float_s_fu_169_y_in = 'bx;
        end
    end else begin
        grp_atan2_generic_float_s_fu_169_y_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_175_ce = 1'b1;
    end else begin
        grp_fu_175_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_180_ce = 1'b1;
    end else begin
        grp_fu_180_ce = 1'b0;
    end
end

assign a_fu_369_p1 = zext_ln368_fu_365_p1;

assign and_ln18_1_fu_355_p2 = (icmp_ln828_fu_261_p2 & icmp_ln757_fu_249_p2);

assign and_ln18_fu_349_p2 = (icmp_ln828_1_fu_285_p2 & icmp_ln757_1_fu_273_p2);

assign and_ln746_1_fu_439_p2 = (tmp_10_fu_187_p2 & and_ln746_fu_433_p2);

assign and_ln746_fu_433_p2 = (or_ln746_fu_415_p2 & or_ln746_1_fu_427_p2);

assign and_ln762_fu_303_p2 = (p_Result_s_fu_201_p3 & icmp_ln828_fu_261_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp77 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_382 = ((1'd0 == and_ln18_1_reg_602_pp0_iter13_reg) & (1'd0 == and_ln18_reg_598_pp0_iter13_reg) & (1'd1 == and_ln746_1_reg_622_pp0_iter13_reg) & (icmp_ln824_3_reg_618_pp0_iter13_reg == 1'd0) & (icmp_ln766_reg_594_pp0_iter13_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter13_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter13_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter13_reg == 1'd1) & (or_ln757_reg_574_pp0_iter13_reg == 1'd1));
end

always @ (*) begin
    ap_condition_415 = ((1'd0 == and_ln18_1_reg_602_pp0_iter15_reg) & (1'd0 == and_ln18_reg_598_pp0_iter15_reg) & (tmp_5_reg_631 == 2'd1) & (icmp_ln766_reg_594_pp0_iter15_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter15_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1));
end

always @ (*) begin
    ap_condition_420 = ((1'd0 == and_ln18_reg_598_pp0_iter15_reg) & (1'd1 == and_ln18_1_reg_602_pp0_iter15_reg) & (icmp_ln766_reg_594_pp0_iter15_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter15_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1));
end

always @ (*) begin
    ap_condition_425 = ((icmp_ln766_reg_594_pp0_iter15_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter15_reg == 1'd1) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1));
end

always @ (*) begin
    ap_condition_437 = ((1'd0 == and_ln762_reg_586_pp0_iter15_reg) & (icmp_ln766_reg_594_pp0_iter15_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd1) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1) & (icmp_ln828_reg_570_pp0_iter15_reg == 1'd0) & (p_Result_s_reg_553_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_condition_442 = ((1'd0 == and_ln762_reg_586_pp0_iter15_reg) & (icmp_ln766_reg_594_pp0_iter15_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd1) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1) & (icmp_ln828_reg_570_pp0_iter15_reg == 1'd0) & (p_Result_s_reg_553_pp0_iter15_reg == 1'd1));
end

always @ (*) begin
    ap_condition_451 = (((icmp_ln766_reg_594_pp0_iter15_reg == 1'd1) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1)) | ((1'd0 == and_ln762_reg_586_pp0_iter15_reg) & (icmp_ln766_reg_594_pp0_iter15_reg == 1'd1) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1) & (icmp_ln828_reg_570_pp0_iter15_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_456 = ((1'd0 == and_ln762_reg_586_pp0_iter15_reg) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd1) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1) & (icmp_ln828_reg_570_pp0_iter15_reg == 1'd1));
end

always @ (*) begin
    ap_condition_461 = ((1'd1 == and_ln762_reg_586_pp0_iter15_reg) & (icmp_ln824_reg_582_pp0_iter15_reg == 1'd1) & (or_ln757_1_reg_578_pp0_iter15_reg == 1'd1) & (or_ln757_reg_574_pp0_iter15_reg == 1'd1));
end

always @ (*) begin
    ap_condition_778 = ((1'd0 == and_ln746_1_reg_622_pp0_iter11_reg) & (1'd0 == and_ln18_1_reg_602_pp0_iter11_reg) & (1'd0 == and_ln18_reg_598_pp0_iter11_reg) & (icmp_ln824_3_reg_618_pp0_iter11_reg == 1'd0) & (icmp_ln766_reg_594_pp0_iter11_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter11_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter11_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter11_reg == 1'd1) & (or_ln757_reg_574_pp0_iter11_reg == 1'd1));
end

always @ (*) begin
    ap_condition_782 = ((1'd0 == and_ln18_1_fu_355_p2) & (1'd0 == and_ln18_fu_349_p2) & (icmp_ln824_3_fu_403_p2 == 1'd1) & (icmp_ln766_fu_343_p2 == 1'd0) & (icmp_ln824_2_fu_309_p2 == 1'd0) & (icmp_ln824_fu_297_p2 == 1'd0) & (or_ln757_1_fu_291_p2 == 1'd1) & (or_ln757_fu_267_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_810 = ((1'd1 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd3) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_815 = ((1'd1 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd2) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_819 = ((1'd1 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd1) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_824 = ((1'd0 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd3) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_827 = ((1'd0 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd2) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_830 = ((1'd0 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd1) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_845 = ((1'd0 == and_ln18_1_reg_602_pp0_iter16_reg) & (1'd0 == and_ln18_reg_598_pp0_iter16_reg) & (icmp_ln766_reg_594_pp0_iter16_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter16_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter16_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter16_reg == 1'd1) & (or_ln757_reg_574_pp0_iter16_reg == 1'd1));
end

always @ (*) begin
    ap_condition_858 = ((1'd0 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd0 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd0) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_860 = ((1'd1 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd0) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

always @ (*) begin
    ap_condition_863 = ((1'd0 == and_ln18_1_reg_602_pp0_iter14_reg) & (1'd1 == and_ln18_reg_598_pp0_iter14_reg) & (tmp_5_fu_445_p3 == 2'd0) & (icmp_ln766_reg_594_pp0_iter14_reg == 1'd0) & (icmp_ln824_2_reg_590_pp0_iter14_reg == 1'd0) & (icmp_ln824_reg_582_pp0_iter14_reg == 1'd0) & (or_ln757_1_reg_578_pp0_iter14_reg == 1'd1) & (or_ln757_reg_574_pp0_iter14_reg == 1'd1));
end

assign ap_phi_reg_pp0_iter0_UnifiedRetVal_reg_102 = 'bx;

assign ap_phi_reg_pp0_iter0_c_reg_88 = 'bx;

always @ (*) begin
    ap_predicate_op77_call_state2 = ((icmp_ln824_3_reg_618 == 1'd0) & (icmp_ln824_2_reg_590 == 1'd0) & (icmp_ln766_reg_594 == 1'd0) & (1'd0 == and_ln746_1_reg_622) & (1'd0 == and_ln18_1_reg_602) & (1'd0 == and_ln18_reg_598) & (icmp_ln824_reg_582 == 1'd0) & (or_ln757_1_reg_578 == 1'd1) & (or_ln757_reg_574 == 1'd1));
end

always @ (*) begin
    ap_predicate_op78_call_state2 = ((icmp_ln824_3_reg_618 == 1'd0) & (icmp_ln824_2_reg_590 == 1'd0) & (icmp_ln766_reg_594 == 1'd0) & (1'd0 == and_ln18_1_reg_602) & (1'd0 == and_ln18_reg_598) & (icmp_ln824_reg_582 == 1'd0) & (or_ln757_1_reg_578 == 1'd1) & (1'd1 == and_ln746_1_reg_622) & (or_ln757_reg_574 == 1'd1));
end

assign b_fu_382_p1 = zext_ln368_1_fu_378_p1;

assign bitcast_ln351_1_fu_523_p1 = p_Result_33_fu_516_p3;

assign bitcast_ln351_2_fu_512_p1 = p_Result_34_fu_505_p3;

assign bitcast_ln351_3_fu_501_p1 = p_Result_35_fu_494_p3;

assign bitcast_ln351_4_fu_490_p1 = p_Result_36_fu_483_p3;

assign bitcast_ln351_5_fu_479_p1 = p_Result_37_fu_472_p3;

assign bitcast_ln351_fu_534_p1 = p_Result_32_fu_527_p3;

assign bitcast_ln822_1_fu_461_p1 = xor_ln822_fu_455_p2;

assign bitcast_ln822_fu_451_p1 = c_reg_88;

assign bitcast_ln826_1_fu_548_p1 = xor_ln826_fu_542_p2;

assign bitcast_ln826_fu_538_p1 = grp_fu_180_p2;

assign data_V_2_fu_223_p1 = y_in_int_reg;

assign data_V_fu_197_p1 = x_in_int_reg;

assign icmp_ln746_1_fu_421_p2 = ((tmp_fu_209_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln746_fu_409_p2 = ((tmp_79_fu_235_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln757_1_fu_273_p2 = ((tmp_fu_209_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln757_fu_249_p2 = ((tmp_79_fu_235_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln766_fu_343_p2 = ((tmp_4_fu_335_p3 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_2_fu_309_p2 = ((tmp_fu_209_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_3_fu_403_p2 = ((p_Result_40_fu_387_p3 == p_Result_41_fu_395_p3) ? 1'b1 : 1'b0);

assign icmp_ln824_fu_297_p2 = ((tmp_79_fu_235_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln828_1_fu_285_p2 = ((tmp_78_fu_219_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln828_fu_261_p2 = ((tmp_80_fu_245_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_ln746_1_fu_427_p2 = (icmp_ln828_1_fu_285_p2 | icmp_ln746_1_fu_421_p2);

assign or_ln746_fu_415_p2 = (icmp_ln828_fu_261_p2 | icmp_ln746_fu_409_p2);

assign or_ln757_1_fu_291_p2 = (xor_ln18_1_fu_279_p2 | icmp_ln828_1_fu_285_p2);

assign or_ln757_fu_267_p2 = (xor_ln18_fu_255_p2 | icmp_ln828_fu_261_p2);

assign or_ln766_fu_319_p2 = (trunc_ln766_fu_315_p1 | tmp_fu_209_p4);

assign p_Result_32_fu_527_p3 = {{p_Result_31_reg_558_pp0_iter15_reg}, {31'd1078530011}};

assign p_Result_33_fu_516_p3 = {{p_Result_31_reg_558_pp0_iter15_reg}, {31'd0}};

assign p_Result_34_fu_505_p3 = {{p_Result_31_reg_558_pp0_iter15_reg}, {31'd1070141403}};

assign p_Result_35_fu_494_p3 = {{p_Result_31_reg_558_pp0_iter15_reg}, {31'd1078530011}};

assign p_Result_36_fu_483_p3 = {{p_Result_31_reg_558_pp0_iter15_reg}, {31'd0}};

assign p_Result_37_fu_472_p3 = {{p_Result_31_reg_558_pp0_iter15_reg}, {31'd1070141403}};

assign p_Result_38_fu_361_p1 = data_V_2_fu_223_p1[30:0];

assign p_Result_39_fu_374_p1 = data_V_fu_197_p1[30:0];

assign p_Result_40_fu_387_p3 = {{1'd0}, {p_Result_39_fu_374_p1}};

assign p_Result_41_fu_395_p3 = {{1'd0}, {p_Result_38_fu_361_p1}};

assign p_Result_s_fu_201_p3 = data_V_fu_197_p1[32'd31];

assign select_ln809_fu_465_p3 = ((p_Result_31_reg_558_pp0_iter15_reg[0:0] == 1'b1) ? 32'd3217625051 : 32'd1070141403);

assign tmp_10_fu_187_p0 = zext_ln368_fu_365_p1;

assign tmp_10_fu_187_p1 = zext_ln368_1_fu_378_p1;

assign tmp_3_fu_325_p4 = {{data_V_fu_197_p1[22:8]}};

assign tmp_4_fu_335_p3 = {{tmp_3_fu_325_p4}, {or_ln766_fu_319_p2}};

assign tmp_5_fu_445_p3 = {{p_Result_s_reg_553_pp0_iter14_reg}, {p_Result_31_reg_558_pp0_iter14_reg}};

assign tmp_78_fu_219_p1 = data_V_fu_197_p1[22:0];

assign tmp_79_fu_235_p4 = {{data_V_2_fu_223_p1[30:23]}};

assign tmp_80_fu_245_p1 = data_V_2_fu_223_p1[22:0];

assign tmp_fu_209_p4 = {{data_V_fu_197_p1[30:23]}};

assign trunc_ln766_fu_315_p1 = data_V_fu_197_p1[7:0];

assign xor_ln18_1_fu_279_p2 = (icmp_ln757_1_fu_273_p2 ^ 1'd1);

assign xor_ln18_fu_255_p2 = (icmp_ln757_fu_249_p2 ^ 1'd1);

assign xor_ln822_fu_455_p2 = (bitcast_ln822_fu_451_p1 ^ 32'd2147483648);

assign xor_ln826_fu_542_p2 = (bitcast_ln826_fu_538_p1 ^ 32'd2147483648);

assign zext_ln368_1_fu_378_p1 = p_Result_39_fu_374_p1;

assign zext_ln368_fu_365_p1 = p_Result_38_fu_361_p1;

always @ (posedge ap_clk) begin
    a_reg_606[31] <= 1'b0;
    b_reg_612[31] <= 1'b0;
end

endmodule //apskdemod_atan2_cordic_float_s
