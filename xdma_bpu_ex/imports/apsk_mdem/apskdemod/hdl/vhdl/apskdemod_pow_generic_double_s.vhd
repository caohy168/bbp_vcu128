-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity apskdemod_pow_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    base_r : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of apskdemod_pow_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv12_C02 : STD_LOGIC_VECTOR (11 downto 0) := "110000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv23_400000 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv44_0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv28_8000000 : STD_LOGIC_VECTOR (27 downto 0) := "1000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv33_100000000 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv90_58B90BFBE8E7BCD5E4F1 : STD_LOGIC_VECTOR (89 downto 0) := "000000000001011000101110010000101111111011111010001110011110111100110101011110010011110001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv45_0 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv71_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (70 downto 0) := "10110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv58_10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_q0 : STD_LOGIC_VECTOR (108 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0 : STD_LOGIC_VECTOR (104 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_q0 : STD_LOGIC_VECTOR (101 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_q0 : STD_LOGIC_VECTOR (96 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_q0 : STD_LOGIC_VECTOR (91 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_q0 : STD_LOGIC_VECTOR (86 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_q0 : STD_LOGIC_VECTOR (81 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_q0 : STD_LOGIC_VECTOR (76 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_24_fu_586_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_24_reg_2265 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln824_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_2271_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_2276_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_reg_2283_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_2289_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_636_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_2295 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_2_fu_660_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_reg_2300_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln488_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_reg_2305_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln407_1_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_1_reg_2315_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2321_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln682_fu_752_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln682_reg_2327 : STD_LOGIC_VECTOR (53 downto 0);
    signal a_reg_2334 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2334_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2334_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2334_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2334_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2334_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_2334_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln657_fu_768_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal trunc_ln657_reg_2340 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_9_reg_2345 : STD_LOGIC_VECTOR (0 downto 0);
    signal z2_V_reg_2350 : STD_LOGIC_VECTOR (72 downto 0);
    signal a_1_reg_2356 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2356_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2356_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2356_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2356_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_2356_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_reg_2362 : STD_LOGIC_VECTOR (66 downto 0);
    signal ret_V_4_fu_942_p2 : STD_LOGIC_VECTOR (81 downto 0);
    signal ret_V_4_reg_2367 : STD_LOGIC_VECTOR (81 downto 0);
    signal a_2_reg_2373 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_2373_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_2373_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_2373_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_2373_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln657_3_fu_958_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal trunc_ln657_3_reg_2379 : STD_LOGIC_VECTOR (75 downto 0);
    signal z4_V_reg_2384 : STD_LOGIC_VECTOR (91 downto 0);
    signal tmp_s_reg_2390 : STD_LOGIC_VECTOR (85 downto 0);
    signal tmp_1_reg_2395 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_2395_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_2395_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_2395_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_reg_2401 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_4_reg_2407 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_5_reg_2412 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_2412_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_2412_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_reg_2418 : STD_LOGIC_VECTOR (81 downto 0);
    signal tmp_10_reg_2424 : STD_LOGIC_VECTOR (75 downto 0);
    signal tmp_11_reg_2429 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_reg_2429_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_reg_2435 : STD_LOGIC_VECTOR (76 downto 0);
    signal tmp_13_reg_2441 : STD_LOGIC_VECTOR (70 downto 0);
    signal tmp_14_reg_2446 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_reg_2492 : STD_LOGIC_VECTOR (71 downto 0);
    signal tmp_16_reg_2497 : STD_LOGIC_VECTOR (39 downto 0);
    signal ret_V_16_fu_1597_p2 : STD_LOGIC_VECTOR (119 downto 0);
    signal ret_V_16_reg_2502 : STD_LOGIC_VECTOR (119 downto 0);
    signal ret_V_16_reg_2502_pp0_iter10_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal ret_V_16_reg_2502_pp0_iter11_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal ret_V_16_reg_2502_pp0_iter12_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal ret_V_16_reg_2502_pp0_iter13_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal ret_V_16_reg_2502_pp0_iter14_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal ret_V_16_reg_2502_pp0_iter15_reg : STD_LOGIC_VECTOR (119 downto 0);
    signal p_Result_14_reg_2507 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_14_reg_2507_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_reg_2517 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_2517_pp0_iter10_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_2517_pp0_iter11_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln2_reg_2517_pp0_iter12_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal ret_V_32_fu_1685_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_32_reg_2527 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_32_reg_2527_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_32_reg_2527_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_32_reg_2527_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal m_diff_hi_V_reg_2534 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_2539 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_2539_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_fu_1737_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_2546 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_fu_1747_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_2551 : STD_LOGIC_VECTOR (34 downto 0);
    signal ret_V_34_fu_1798_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_34_reg_2571 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln657_7_fu_1835_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln657_7_reg_2576 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_V_reg_2586 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_V_reg_2591 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_V_reg_2596 : STD_LOGIC_VECTOR (49 downto 0);
    signal icmp_ln840_fu_2064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln840_reg_2601 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln844_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln844_reg_2606 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln657_fu_2148_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln657_reg_2611 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln488_1_fu_1328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_6_fu_1332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_7_fu_1336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_8_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_9_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_10_fu_1348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_11_fu_1410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_3_fu_1761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_4_fu_1766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_2_fu_1771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_5_fu_1841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_576_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln510_fu_590_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_fu_594_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln369_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_fu_568_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln964_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_1_fu_654_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal index0_fu_644_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln407_1_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln369_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln407_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln407_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln407_2_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_3_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_21_fu_730_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln1287_1_fu_737_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_13_fu_721_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln682_fu_752_p0 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln682_fu_752_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sf_fu_787_p4 : STD_LOGIC_VECTOR (74 downto 0);
    signal tmp_7_fu_796_p4 : STD_LOGIC_VECTOR (75 downto 0);
    signal zext_ln1287_fu_805_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal lhs_fu_816_p3 : STD_LOGIC_VECTOR (74 downto 0);
    signal zext_ln1146_fu_823_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal select_ln1287_fu_809_p3 : STD_LOGIC_VECTOR (75 downto 0);
    signal z1_V_fu_780_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_22_fu_840_p0 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_22_fu_840_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_22_fu_840_p2 : STD_LOGIC_VECTOR (74 downto 0);
    signal ret_V_24_fu_827_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal zext_ln1147_fu_846_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal ret_V_2_fu_850_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal zext_ln662_fu_886_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal lhs_2_fu_897_p3 : STD_LOGIC_VECTOR (80 downto 0);
    signal eZ_fu_889_p3 : STD_LOGIC_VECTOR (80 downto 0);
    signal zext_ln1146_1_fu_904_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal zext_ln657_fu_908_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal r_V_23_fu_924_p0 : STD_LOGIC_VECTOR (72 downto 0);
    signal r_V_23_fu_924_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_23_fu_924_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal rhs_3_fu_930_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal ret_V_25_fu_912_p2 : STD_LOGIC_VECTOR (81 downto 0);
    signal zext_ln1147_1_fu_938_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal lhs_4_fu_978_p3 : STD_LOGIC_VECTOR (100 downto 0);
    signal eZ_1_fu_969_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal zext_ln1146_2_fu_985_p1 : STD_LOGIC_VECTOR (101 downto 0);
    signal zext_ln657_1_fu_989_p1 : STD_LOGIC_VECTOR (101 downto 0);
    signal z3_V_fu_962_p3 : STD_LOGIC_VECTOR (82 downto 0);
    signal r_V_24_fu_1006_p0 : STD_LOGIC_VECTOR (82 downto 0);
    signal r_V_24_fu_1006_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_24_fu_1006_p2 : STD_LOGIC_VECTOR (88 downto 0);
    signal rhs_6_fu_1012_p3 : STD_LOGIC_VECTOR (94 downto 0);
    signal ret_V_26_fu_993_p2 : STD_LOGIC_VECTOR (101 downto 0);
    signal zext_ln1147_2_fu_1020_p1 : STD_LOGIC_VECTOR (101 downto 0);
    signal ret_V_6_fu_1024_p2 : STD_LOGIC_VECTOR (101 downto 0);
    signal zext_ln662_1_fu_1060_p1 : STD_LOGIC_VECTOR (101 downto 0);
    signal lhs_6_fu_1071_p3 : STD_LOGIC_VECTOR (119 downto 0);
    signal eZ_2_fu_1063_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln1146_3_fu_1078_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln657_2_fu_1082_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal r_V_25_fu_1098_p0 : STD_LOGIC_VECTOR (91 downto 0);
    signal r_V_25_fu_1098_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_25_fu_1098_p2 : STD_LOGIC_VECTOR (97 downto 0);
    signal rhs_9_fu_1104_p3 : STD_LOGIC_VECTOR (108 downto 0);
    signal ret_V_27_fu_1086_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln1147_3_fu_1112_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal ret_V_8_fu_1116_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal lhs_8_fu_1159_p3 : STD_LOGIC_VECTOR (124 downto 0);
    signal eZ_3_fu_1152_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln1146_4_fu_1166_p1 : STD_LOGIC_VECTOR (125 downto 0);
    signal zext_ln657_3_fu_1170_p1 : STD_LOGIC_VECTOR (125 downto 0);
    signal r_V_26_fu_1186_p0 : STD_LOGIC_VECTOR (86 downto 0);
    signal r_V_26_fu_1186_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_26_fu_1186_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal rhs_12_fu_1192_p3 : STD_LOGIC_VECTOR (108 downto 0);
    signal ret_V_28_fu_1174_p2 : STD_LOGIC_VECTOR (125 downto 0);
    signal zext_ln1147_4_fu_1200_p1 : STD_LOGIC_VECTOR (125 downto 0);
    signal ret_V_10_fu_1204_p2 : STD_LOGIC_VECTOR (125 downto 0);
    signal lhs_10_fu_1247_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal eZ_4_fu_1240_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln1146_5_fu_1254_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal zext_ln657_4_fu_1258_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_27_fu_1274_p0 : STD_LOGIC_VECTOR (81 downto 0);
    signal r_V_27_fu_1274_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_27_fu_1274_p2 : STD_LOGIC_VECTOR (87 downto 0);
    signal rhs_15_fu_1280_p3 : STD_LOGIC_VECTOR (108 downto 0);
    signal ret_V_29_fu_1262_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal zext_ln1147_5_fu_1288_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal ret_V_12_fu_1292_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal lhs_12_fu_1359_p3 : STD_LOGIC_VECTOR (134 downto 0);
    signal eZ_5_fu_1352_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln1146_6_fu_1366_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln657_5_fu_1370_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal r_V_28_fu_1386_p0 : STD_LOGIC_VECTOR (76 downto 0);
    signal r_V_28_fu_1386_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_28_fu_1386_p2 : STD_LOGIC_VECTOR (82 downto 0);
    signal rhs_18_fu_1392_p3 : STD_LOGIC_VECTOR (108 downto 0);
    signal ret_V_30_fu_1374_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln1147_6_fu_1400_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal ret_V_14_fu_1404_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal Elog2_V_fu_1437_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal zext_ln223_fu_1443_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal zext_ln223_1_fu_1447_p1 : STD_LOGIC_VECTOR (102 downto 0);
    signal zext_ln223_2_fu_1451_p1 : STD_LOGIC_VECTOR (102 downto 0);
    signal add_ln657_1_fu_1477_p2 : STD_LOGIC_VECTOR (102 downto 0);
    signal zext_ln657_6_fu_1483_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal add_ln657_fu_1471_p2 : STD_LOGIC_VECTOR (108 downto 0);
    signal zext_ln223_3_fu_1455_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal zext_ln223_4_fu_1459_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal zext_ln223_5_fu_1463_p1 : STD_LOGIC_VECTOR (82 downto 0);
    signal zext_ln223_6_fu_1467_p1 : STD_LOGIC_VECTOR (82 downto 0);
    signal add_ln657_4_fu_1499_p2 : STD_LOGIC_VECTOR (82 downto 0);
    signal zext_ln657_7_fu_1505_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal add_ln657_3_fu_1493_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal add_ln657_5_fu_1509_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal zext_ln657_8_fu_1515_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal add_ln657_2_fu_1487_p2 : STD_LOGIC_VECTOR (108 downto 0);
    signal r_V_29_fu_1528_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln1069_2_fu_1525_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_29_fu_1528_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_29_fu_1528_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal lhs_V_fu_1544_p3 : STD_LOGIC_VECTOR (116 downto 0);
    signal rhs_s_fu_1534_p4 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1147_7_fu_1551_p1 : STD_LOGIC_VECTOR (117 downto 0);
    signal zext_ln1147_8_fu_1555_p1 : STD_LOGIC_VECTOR (117 downto 0);
    signal ret_V_fu_1559_p2 : STD_LOGIC_VECTOR (117 downto 0);
    signal Elog2_V_fu_1437_p2 : STD_LOGIC_VECTOR (89 downto 0);
    signal log_sum_V_1_fu_1519_p2 : STD_LOGIC_VECTOR (108 downto 0);
    signal lhs_V_2_fu_1575_p3 : STD_LOGIC_VECTOR (119 downto 0);
    signal sext_ln1146_fu_1583_p1 : STD_LOGIC_VECTOR (119 downto 0);
    signal trunc_ln1_fu_1565_p4 : STD_LOGIC_VECTOR (72 downto 0);
    signal ret_V_15_fu_1587_p2 : STD_LOGIC_VECTOR (119 downto 0);
    signal sext_ln1146_1_fu_1593_p1 : STD_LOGIC_VECTOR (119 downto 0);
    signal m_fix_hi_V_fu_1603_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_19_fu_1635_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2254_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln805_fu_1662_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_25_cast_fu_1646_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln805_fu_1665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_18_fu_1671_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_5_fu_1655_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln804_fu_1677_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_15_fu_1696_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal trunc_ln657_1_fu_1702_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal m_diff_V_fu_1712_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal Z4_ind_fu_1751_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_fu_1775_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln657_9_fu_1785_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln657_10_fu_1788_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_33_fu_1792_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_17_fu_1815_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_17_fu_1815_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_17_fu_1815_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal trunc_ln657_s_fu_1821_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln657_11_fu_1831_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln657_12_fu_1848_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1146_7_fu_1845_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_17_fu_1857_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal exp_Z2_m_1_V_fu_1867_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal exp_Z2P_m_1_V_fu_1851_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_19_fu_1884_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_19_fu_1884_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lhs_V_4_fu_1890_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_19_fu_1884_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal trunc_ln657_2_fu_1905_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln657_13_fu_1915_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln657_9_fu_1919_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln657_14_fu_1925_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1146_8_fu_1901_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_1929_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_fu_1966_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_fu_1966_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_35_fu_1955_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal r_V_fu_1966_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln1146_fu_1988_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal trunc_ln1146_2_fu_2004_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal lhs_V_7_fu_1972_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln1146_9_fu_1980_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal trunc_ln1146_1_fu_2008_p3 : STD_LOGIC_VECTOR (104 downto 0);
    signal zext_ln1146_11_fu_2000_p1 : STD_LOGIC_VECTOR (104 downto 0);
    signal trunc_ln3_fu_1992_p3 : STD_LOGIC_VECTOR (105 downto 0);
    signal zext_ln1146_10_fu_1984_p1 : STD_LOGIC_VECTOR (105 downto 0);
    signal ret_V_23_fu_2016_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_19_fu_2034_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_2042_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_2_fu_2047_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_20_fu_2054_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_2070_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1146_2_fu_2028_p2 : STD_LOGIC_VECTOR (105 downto 0);
    signal add_ln1146_1_fu_2022_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal tmp_fu_2091_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_fu_2101_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln167_fu_2119_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_V_fu_2123_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_2111_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_15_fu_2129_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln657_fu_2143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln658_fu_2077_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln521_fu_2139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln828_fu_2156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_fu_2161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln407_fu_2166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln407_fu_2171_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln407_1_fu_2178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln407_1_fu_2183_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln407_2_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln407_2_fu_2195_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln407_3_fu_2203_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln657_fu_2217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln844_fu_2222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln844_1_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_2211_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln844_fu_2232_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln369_fu_2240_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_2254_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to16 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln682_fu_752_p10 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_17_fu_1815_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_17_fu_1815_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_19_fu_1884_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_19_fu_1884_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_22_fu_840_p00 : STD_LOGIC_VECTOR (74 downto 0);
    signal r_V_22_fu_840_p10 : STD_LOGIC_VECTOR (74 downto 0);
    signal r_V_23_fu_924_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_23_fu_924_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_24_fu_1006_p00 : STD_LOGIC_VECTOR (88 downto 0);
    signal r_V_24_fu_1006_p10 : STD_LOGIC_VECTOR (88 downto 0);
    signal r_V_25_fu_1098_p00 : STD_LOGIC_VECTOR (97 downto 0);
    signal r_V_25_fu_1098_p10 : STD_LOGIC_VECTOR (97 downto 0);
    signal r_V_26_fu_1186_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_26_fu_1186_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_27_fu_1274_p00 : STD_LOGIC_VECTOR (87 downto 0);
    signal r_V_27_fu_1274_p10 : STD_LOGIC_VECTOR (87 downto 0);
    signal r_V_28_fu_1386_p00 : STD_LOGIC_VECTOR (82 downto 0);
    signal r_V_28_fu_1386_p10 : STD_LOGIC_VECTOR (82 downto 0);
    signal r_V_fu_1966_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_fu_1966_p10 : STD_LOGIC_VECTOR (99 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component apskdemod_mul_54s_6ns_54_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (53 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component apskdemod_mul_71ns_4ns_75_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (70 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (74 downto 0) );
    end component;


    component apskdemod_mul_73ns_6ns_79_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (72 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component apskdemod_mul_83ns_6ns_89_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (82 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (88 downto 0) );
    end component;


    component apskdemod_mul_92ns_6ns_98_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (91 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (97 downto 0) );
    end component;


    component apskdemod_mul_87ns_6ns_93_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (86 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component apskdemod_mul_82ns_6ns_88_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (81 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (87 downto 0) );
    end component;


    component apskdemod_mul_77ns_6ns_83_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (76 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (82 downto 0) );
    end component;


    component apskdemod_mul_12s_80ns_90_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (79 downto 0);
        dout : OUT STD_LOGIC_VECTOR (89 downto 0) );
    end component;


    component apskdemod_mul_40ns_40ns_80_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        dout : OUT STD_LOGIC_VECTOR (79 downto 0) );
    end component;


    component apskdemod_mul_13s_71s_71_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (70 downto 0);
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component apskdemod_mul_43ns_36ns_79_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component apskdemod_mul_49ns_44ns_93_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component apskdemod_mul_50ns_50ns_100_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component apskdemod_mac_muladd_16s_16ns_19s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_powbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_1cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (108 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (104 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (101 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (96 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (91 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (86 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12ibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (81 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12jbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (76 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58kbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0lbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0mb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_powbkb
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0);

    pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_1cud
    generic map (
        DataWidth => 109,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12dEe
    generic map (
        DataWidth => 105,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12eOg
    generic map (
        DataWidth => 102,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12fYi
    generic map (
        DataWidth => 97,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12g8j
    generic map (
        DataWidth => 92,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12hbi
    generic map (
        DataWidth => 87,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12ibs
    generic map (
        DataWidth => 82,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12jbC
    generic map (
        DataWidth => 77,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_q0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58kbM
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0lbW
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0,
        address1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1,
        ce1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1,
        q1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component apskdemod_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0mb6
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    mul_54s_6ns_54_1_1_U1 : component apskdemod_mul_54s_6ns_54_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 54,
        din1_WIDTH => 6,
        dout_WIDTH => 54)
    port map (
        din0 => mul_ln682_fu_752_p0,
        din1 => mul_ln682_fu_752_p1,
        dout => mul_ln682_fu_752_p2);

    mul_71ns_4ns_75_1_1_U2 : component apskdemod_mul_71ns_4ns_75_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 71,
        din1_WIDTH => 4,
        dout_WIDTH => 75)
    port map (
        din0 => r_V_22_fu_840_p0,
        din1 => r_V_22_fu_840_p1,
        dout => r_V_22_fu_840_p2);

    mul_73ns_6ns_79_1_1_U3 : component apskdemod_mul_73ns_6ns_79_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 73,
        din1_WIDTH => 6,
        dout_WIDTH => 79)
    port map (
        din0 => r_V_23_fu_924_p0,
        din1 => r_V_23_fu_924_p1,
        dout => r_V_23_fu_924_p2);

    mul_83ns_6ns_89_1_1_U4 : component apskdemod_mul_83ns_6ns_89_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 83,
        din1_WIDTH => 6,
        dout_WIDTH => 89)
    port map (
        din0 => r_V_24_fu_1006_p0,
        din1 => r_V_24_fu_1006_p1,
        dout => r_V_24_fu_1006_p2);

    mul_92ns_6ns_98_1_1_U5 : component apskdemod_mul_92ns_6ns_98_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 92,
        din1_WIDTH => 6,
        dout_WIDTH => 98)
    port map (
        din0 => r_V_25_fu_1098_p0,
        din1 => r_V_25_fu_1098_p1,
        dout => r_V_25_fu_1098_p2);

    mul_87ns_6ns_93_1_1_U6 : component apskdemod_mul_87ns_6ns_93_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 87,
        din1_WIDTH => 6,
        dout_WIDTH => 93)
    port map (
        din0 => r_V_26_fu_1186_p0,
        din1 => r_V_26_fu_1186_p1,
        dout => r_V_26_fu_1186_p2);

    mul_82ns_6ns_88_1_1_U7 : component apskdemod_mul_82ns_6ns_88_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 82,
        din1_WIDTH => 6,
        dout_WIDTH => 88)
    port map (
        din0 => r_V_27_fu_1274_p0,
        din1 => r_V_27_fu_1274_p1,
        dout => r_V_27_fu_1274_p2);

    mul_77ns_6ns_83_1_1_U8 : component apskdemod_mul_77ns_6ns_83_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 77,
        din1_WIDTH => 6,
        dout_WIDTH => 83)
    port map (
        din0 => r_V_28_fu_1386_p0,
        din1 => r_V_28_fu_1386_p1,
        dout => r_V_28_fu_1386_p2);

    mul_12s_80ns_90_1_1_U9 : component apskdemod_mul_12s_80ns_90_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 80,
        dout_WIDTH => 90)
    port map (
        din0 => b_exp_2_reg_2300_pp0_iter8_reg,
        din1 => Elog2_V_fu_1437_p1,
        dout => Elog2_V_fu_1437_p2);

    mul_40ns_40ns_80_1_1_U10 : component apskdemod_mul_40ns_40ns_80_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        dout_WIDTH => 80)
    port map (
        din0 => r_V_29_fu_1528_p0,
        din1 => r_V_29_fu_1528_p1,
        dout => r_V_29_fu_1528_p2);

    mul_13s_71s_71_1_1_U11 : component apskdemod_mul_13s_71s_71_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 71,
        dout_WIDTH => 71)
    port map (
        din0 => ret_V_32_reg_2527,
        din1 => ap_const_lv71_58B90BFBE8E7BCD5E4,
        dout => r_V_15_fu_1696_p2);

    mul_43ns_36ns_79_1_1_U12 : component apskdemod_mul_43ns_36ns_79_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        din0 => r_V_17_fu_1815_p0,
        din1 => r_V_17_fu_1815_p1,
        dout => r_V_17_fu_1815_p2);

    mul_49ns_44ns_93_1_1_U13 : component apskdemod_mul_49ns_44ns_93_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        din0 => r_V_19_fu_1884_p0,
        din1 => r_V_19_fu_1884_p1,
        dout => r_V_19_fu_1884_p2);

    mul_50ns_50ns_100_1_1_U14 : component apskdemod_mul_50ns_50ns_100_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        din0 => r_V_fu_1966_p0,
        din1 => r_V_fu_1966_p1,
        dout => r_V_fu_1966_p2);

    mac_muladd_16s_16ns_19s_31_4_1_U15 : component apskdemod_mac_muladd_16s_16ns_19s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_V_fu_1603_p4,
        din1 => grp_fu_2254_p1,
        din2 => rhs_19_fu_1635_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_2254_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter12_reg = ap_const_lv1_0))) then
                Z2_V_reg_2539 <= m_diff_V_fu_1712_p2(50 downto 43);
                Z3_V_reg_2546 <= m_diff_V_fu_1712_p2(42 downto 35);
                Z4_reg_2551 <= Z4_fu_1747_p1;
                m_diff_hi_V_reg_2534 <= m_diff_V_fu_1712_p2(58 downto 51);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_V_reg_2539_pp0_iter14_reg <= Z2_V_reg_2539;
                a_1_reg_2356_pp0_iter3_reg <= a_1_reg_2356;
                a_1_reg_2356_pp0_iter4_reg <= a_1_reg_2356_pp0_iter3_reg;
                a_1_reg_2356_pp0_iter5_reg <= a_1_reg_2356_pp0_iter4_reg;
                a_1_reg_2356_pp0_iter6_reg <= a_1_reg_2356_pp0_iter5_reg;
                a_1_reg_2356_pp0_iter7_reg <= a_1_reg_2356_pp0_iter6_reg;
                a_2_reg_2373_pp0_iter4_reg <= a_2_reg_2373;
                a_2_reg_2373_pp0_iter5_reg <= a_2_reg_2373_pp0_iter4_reg;
                a_2_reg_2373_pp0_iter6_reg <= a_2_reg_2373_pp0_iter5_reg;
                a_2_reg_2373_pp0_iter7_reg <= a_2_reg_2373_pp0_iter6_reg;
                a_reg_2334_pp0_iter2_reg <= a_reg_2334;
                a_reg_2334_pp0_iter3_reg <= a_reg_2334_pp0_iter2_reg;
                a_reg_2334_pp0_iter4_reg <= a_reg_2334_pp0_iter3_reg;
                a_reg_2334_pp0_iter5_reg <= a_reg_2334_pp0_iter4_reg;
                a_reg_2334_pp0_iter6_reg <= a_reg_2334_pp0_iter5_reg;
                a_reg_2334_pp0_iter7_reg <= a_reg_2334_pp0_iter6_reg;
                and_ln407_1_reg_2315_pp0_iter10_reg <= and_ln407_1_reg_2315_pp0_iter9_reg;
                and_ln407_1_reg_2315_pp0_iter11_reg <= and_ln407_1_reg_2315_pp0_iter10_reg;
                and_ln407_1_reg_2315_pp0_iter12_reg <= and_ln407_1_reg_2315_pp0_iter11_reg;
                and_ln407_1_reg_2315_pp0_iter13_reg <= and_ln407_1_reg_2315_pp0_iter12_reg;
                and_ln407_1_reg_2315_pp0_iter14_reg <= and_ln407_1_reg_2315_pp0_iter13_reg;
                and_ln407_1_reg_2315_pp0_iter15_reg <= and_ln407_1_reg_2315_pp0_iter14_reg;
                and_ln407_1_reg_2315_pp0_iter16_reg <= and_ln407_1_reg_2315_pp0_iter15_reg;
                and_ln407_1_reg_2315_pp0_iter2_reg <= and_ln407_1_reg_2315_pp0_iter1_reg;
                and_ln407_1_reg_2315_pp0_iter3_reg <= and_ln407_1_reg_2315_pp0_iter2_reg;
                and_ln407_1_reg_2315_pp0_iter4_reg <= and_ln407_1_reg_2315_pp0_iter3_reg;
                and_ln407_1_reg_2315_pp0_iter5_reg <= and_ln407_1_reg_2315_pp0_iter4_reg;
                and_ln407_1_reg_2315_pp0_iter6_reg <= and_ln407_1_reg_2315_pp0_iter5_reg;
                and_ln407_1_reg_2315_pp0_iter7_reg <= and_ln407_1_reg_2315_pp0_iter6_reg;
                and_ln407_1_reg_2315_pp0_iter8_reg <= and_ln407_1_reg_2315_pp0_iter7_reg;
                and_ln407_1_reg_2315_pp0_iter9_reg <= and_ln407_1_reg_2315_pp0_iter8_reg;
                b_exp_2_reg_2300_pp0_iter2_reg <= b_exp_2_reg_2300_pp0_iter1_reg;
                b_exp_2_reg_2300_pp0_iter3_reg <= b_exp_2_reg_2300_pp0_iter2_reg;
                b_exp_2_reg_2300_pp0_iter4_reg <= b_exp_2_reg_2300_pp0_iter3_reg;
                b_exp_2_reg_2300_pp0_iter5_reg <= b_exp_2_reg_2300_pp0_iter4_reg;
                b_exp_2_reg_2300_pp0_iter6_reg <= b_exp_2_reg_2300_pp0_iter5_reg;
                b_exp_2_reg_2300_pp0_iter7_reg <= b_exp_2_reg_2300_pp0_iter6_reg;
                b_exp_2_reg_2300_pp0_iter8_reg <= b_exp_2_reg_2300_pp0_iter7_reg;
                icmp_ln824_1_reg_2289_pp0_iter10_reg <= icmp_ln824_1_reg_2289_pp0_iter9_reg;
                icmp_ln824_1_reg_2289_pp0_iter11_reg <= icmp_ln824_1_reg_2289_pp0_iter10_reg;
                icmp_ln824_1_reg_2289_pp0_iter12_reg <= icmp_ln824_1_reg_2289_pp0_iter11_reg;
                icmp_ln824_1_reg_2289_pp0_iter13_reg <= icmp_ln824_1_reg_2289_pp0_iter12_reg;
                icmp_ln824_1_reg_2289_pp0_iter14_reg <= icmp_ln824_1_reg_2289_pp0_iter13_reg;
                icmp_ln824_1_reg_2289_pp0_iter15_reg <= icmp_ln824_1_reg_2289_pp0_iter14_reg;
                icmp_ln824_1_reg_2289_pp0_iter16_reg <= icmp_ln824_1_reg_2289_pp0_iter15_reg;
                icmp_ln824_1_reg_2289_pp0_iter2_reg <= icmp_ln824_1_reg_2289_pp0_iter1_reg;
                icmp_ln824_1_reg_2289_pp0_iter3_reg <= icmp_ln824_1_reg_2289_pp0_iter2_reg;
                icmp_ln824_1_reg_2289_pp0_iter4_reg <= icmp_ln824_1_reg_2289_pp0_iter3_reg;
                icmp_ln824_1_reg_2289_pp0_iter5_reg <= icmp_ln824_1_reg_2289_pp0_iter4_reg;
                icmp_ln824_1_reg_2289_pp0_iter6_reg <= icmp_ln824_1_reg_2289_pp0_iter5_reg;
                icmp_ln824_1_reg_2289_pp0_iter7_reg <= icmp_ln824_1_reg_2289_pp0_iter6_reg;
                icmp_ln824_1_reg_2289_pp0_iter8_reg <= icmp_ln824_1_reg_2289_pp0_iter7_reg;
                icmp_ln824_1_reg_2289_pp0_iter9_reg <= icmp_ln824_1_reg_2289_pp0_iter8_reg;
                icmp_ln824_reg_2271_pp0_iter10_reg <= icmp_ln824_reg_2271_pp0_iter9_reg;
                icmp_ln824_reg_2271_pp0_iter11_reg <= icmp_ln824_reg_2271_pp0_iter10_reg;
                icmp_ln824_reg_2271_pp0_iter12_reg <= icmp_ln824_reg_2271_pp0_iter11_reg;
                icmp_ln824_reg_2271_pp0_iter13_reg <= icmp_ln824_reg_2271_pp0_iter12_reg;
                icmp_ln824_reg_2271_pp0_iter14_reg <= icmp_ln824_reg_2271_pp0_iter13_reg;
                icmp_ln824_reg_2271_pp0_iter15_reg <= icmp_ln824_reg_2271_pp0_iter14_reg;
                icmp_ln824_reg_2271_pp0_iter16_reg <= icmp_ln824_reg_2271_pp0_iter15_reg;
                icmp_ln824_reg_2271_pp0_iter2_reg <= icmp_ln824_reg_2271_pp0_iter1_reg;
                icmp_ln824_reg_2271_pp0_iter3_reg <= icmp_ln824_reg_2271_pp0_iter2_reg;
                icmp_ln824_reg_2271_pp0_iter4_reg <= icmp_ln824_reg_2271_pp0_iter3_reg;
                icmp_ln824_reg_2271_pp0_iter5_reg <= icmp_ln824_reg_2271_pp0_iter4_reg;
                icmp_ln824_reg_2271_pp0_iter6_reg <= icmp_ln824_reg_2271_pp0_iter5_reg;
                icmp_ln824_reg_2271_pp0_iter7_reg <= icmp_ln824_reg_2271_pp0_iter6_reg;
                icmp_ln824_reg_2271_pp0_iter8_reg <= icmp_ln824_reg_2271_pp0_iter7_reg;
                icmp_ln824_reg_2271_pp0_iter9_reg <= icmp_ln824_reg_2271_pp0_iter8_reg;
                p_Result_14_reg_2507_pp0_iter10_reg <= p_Result_14_reg_2507;
                ret_V_16_reg_2502_pp0_iter10_reg <= ret_V_16_reg_2502;
                ret_V_16_reg_2502_pp0_iter11_reg <= ret_V_16_reg_2502_pp0_iter10_reg;
                ret_V_16_reg_2502_pp0_iter12_reg <= ret_V_16_reg_2502_pp0_iter11_reg;
                ret_V_16_reg_2502_pp0_iter13_reg <= ret_V_16_reg_2502_pp0_iter12_reg;
                ret_V_16_reg_2502_pp0_iter14_reg <= ret_V_16_reg_2502_pp0_iter13_reg;
                ret_V_16_reg_2502_pp0_iter15_reg <= ret_V_16_reg_2502_pp0_iter14_reg;
                ret_V_32_reg_2527_pp0_iter13_reg <= ret_V_32_reg_2527;
                ret_V_32_reg_2527_pp0_iter14_reg <= ret_V_32_reg_2527_pp0_iter13_reg;
                ret_V_32_reg_2527_pp0_iter15_reg <= ret_V_32_reg_2527_pp0_iter14_reg;
                sel_tmp13_reg_2321_pp0_iter10_reg <= sel_tmp13_reg_2321_pp0_iter9_reg;
                sel_tmp13_reg_2321_pp0_iter11_reg <= sel_tmp13_reg_2321_pp0_iter10_reg;
                sel_tmp13_reg_2321_pp0_iter12_reg <= sel_tmp13_reg_2321_pp0_iter11_reg;
                sel_tmp13_reg_2321_pp0_iter13_reg <= sel_tmp13_reg_2321_pp0_iter12_reg;
                sel_tmp13_reg_2321_pp0_iter14_reg <= sel_tmp13_reg_2321_pp0_iter13_reg;
                sel_tmp13_reg_2321_pp0_iter15_reg <= sel_tmp13_reg_2321_pp0_iter14_reg;
                sel_tmp13_reg_2321_pp0_iter16_reg <= sel_tmp13_reg_2321_pp0_iter15_reg;
                sel_tmp13_reg_2321_pp0_iter2_reg <= sel_tmp13_reg_2321_pp0_iter1_reg;
                sel_tmp13_reg_2321_pp0_iter3_reg <= sel_tmp13_reg_2321_pp0_iter2_reg;
                sel_tmp13_reg_2321_pp0_iter4_reg <= sel_tmp13_reg_2321_pp0_iter3_reg;
                sel_tmp13_reg_2321_pp0_iter5_reg <= sel_tmp13_reg_2321_pp0_iter4_reg;
                sel_tmp13_reg_2321_pp0_iter6_reg <= sel_tmp13_reg_2321_pp0_iter5_reg;
                sel_tmp13_reg_2321_pp0_iter7_reg <= sel_tmp13_reg_2321_pp0_iter6_reg;
                sel_tmp13_reg_2321_pp0_iter8_reg <= sel_tmp13_reg_2321_pp0_iter7_reg;
                sel_tmp13_reg_2321_pp0_iter9_reg <= sel_tmp13_reg_2321_pp0_iter8_reg;
                tmp_11_reg_2429_pp0_iter7_reg <= tmp_11_reg_2429;
                tmp_1_reg_2395_pp0_iter5_reg <= tmp_1_reg_2395;
                tmp_1_reg_2395_pp0_iter6_reg <= tmp_1_reg_2395_pp0_iter5_reg;
                tmp_1_reg_2395_pp0_iter7_reg <= tmp_1_reg_2395_pp0_iter6_reg;
                tmp_5_reg_2412_pp0_iter6_reg <= tmp_5_reg_2412;
                tmp_5_reg_2412_pp0_iter7_reg <= tmp_5_reg_2412_pp0_iter6_reg;
                trunc_ln2_reg_2517_pp0_iter10_reg <= trunc_ln2_reg_2517;
                trunc_ln2_reg_2517_pp0_iter11_reg <= trunc_ln2_reg_2517_pp0_iter10_reg;
                trunc_ln2_reg_2517_pp0_iter12_reg <= trunc_ln2_reg_2517_pp0_iter11_reg;
                x_is_1_reg_2276_pp0_iter10_reg <= x_is_1_reg_2276_pp0_iter9_reg;
                x_is_1_reg_2276_pp0_iter11_reg <= x_is_1_reg_2276_pp0_iter10_reg;
                x_is_1_reg_2276_pp0_iter12_reg <= x_is_1_reg_2276_pp0_iter11_reg;
                x_is_1_reg_2276_pp0_iter13_reg <= x_is_1_reg_2276_pp0_iter12_reg;
                x_is_1_reg_2276_pp0_iter14_reg <= x_is_1_reg_2276_pp0_iter13_reg;
                x_is_1_reg_2276_pp0_iter15_reg <= x_is_1_reg_2276_pp0_iter14_reg;
                x_is_1_reg_2276_pp0_iter16_reg <= x_is_1_reg_2276_pp0_iter15_reg;
                x_is_1_reg_2276_pp0_iter2_reg <= x_is_1_reg_2276_pp0_iter1_reg;
                x_is_1_reg_2276_pp0_iter3_reg <= x_is_1_reg_2276_pp0_iter2_reg;
                x_is_1_reg_2276_pp0_iter4_reg <= x_is_1_reg_2276_pp0_iter3_reg;
                x_is_1_reg_2276_pp0_iter5_reg <= x_is_1_reg_2276_pp0_iter4_reg;
                x_is_1_reg_2276_pp0_iter6_reg <= x_is_1_reg_2276_pp0_iter5_reg;
                x_is_1_reg_2276_pp0_iter7_reg <= x_is_1_reg_2276_pp0_iter6_reg;
                x_is_1_reg_2276_pp0_iter8_reg <= x_is_1_reg_2276_pp0_iter7_reg;
                x_is_1_reg_2276_pp0_iter9_reg <= x_is_1_reg_2276_pp0_iter8_reg;
                x_is_p1_reg_2283_pp0_iter10_reg <= x_is_p1_reg_2283_pp0_iter9_reg;
                x_is_p1_reg_2283_pp0_iter11_reg <= x_is_p1_reg_2283_pp0_iter10_reg;
                x_is_p1_reg_2283_pp0_iter12_reg <= x_is_p1_reg_2283_pp0_iter11_reg;
                x_is_p1_reg_2283_pp0_iter13_reg <= x_is_p1_reg_2283_pp0_iter12_reg;
                x_is_p1_reg_2283_pp0_iter14_reg <= x_is_p1_reg_2283_pp0_iter13_reg;
                x_is_p1_reg_2283_pp0_iter15_reg <= x_is_p1_reg_2283_pp0_iter14_reg;
                x_is_p1_reg_2283_pp0_iter16_reg <= x_is_p1_reg_2283_pp0_iter15_reg;
                x_is_p1_reg_2283_pp0_iter2_reg <= x_is_p1_reg_2283_pp0_iter1_reg;
                x_is_p1_reg_2283_pp0_iter3_reg <= x_is_p1_reg_2283_pp0_iter2_reg;
                x_is_p1_reg_2283_pp0_iter4_reg <= x_is_p1_reg_2283_pp0_iter3_reg;
                x_is_p1_reg_2283_pp0_iter5_reg <= x_is_p1_reg_2283_pp0_iter4_reg;
                x_is_p1_reg_2283_pp0_iter6_reg <= x_is_p1_reg_2283_pp0_iter5_reg;
                x_is_p1_reg_2283_pp0_iter7_reg <= x_is_p1_reg_2283_pp0_iter6_reg;
                x_is_p1_reg_2283_pp0_iter8_reg <= x_is_p1_reg_2283_pp0_iter7_reg;
                x_is_p1_reg_2283_pp0_iter9_reg <= x_is_p1_reg_2283_pp0_iter8_reg;
                    zext_ln488_reg_2305_pp0_iter2_reg(5 downto 0) <= zext_ln488_reg_2305_pp0_iter1_reg(5 downto 0);
                    zext_ln488_reg_2305_pp0_iter3_reg(5 downto 0) <= zext_ln488_reg_2305_pp0_iter2_reg(5 downto 0);
                    zext_ln488_reg_2305_pp0_iter4_reg(5 downto 0) <= zext_ln488_reg_2305_pp0_iter3_reg(5 downto 0);
                    zext_ln488_reg_2305_pp0_iter5_reg(5 downto 0) <= zext_ln488_reg_2305_pp0_iter4_reg(5 downto 0);
                    zext_ln488_reg_2305_pp0_iter6_reg(5 downto 0) <= zext_ln488_reg_2305_pp0_iter5_reg(5 downto 0);
                    zext_ln488_reg_2305_pp0_iter7_reg(5 downto 0) <= zext_ln488_reg_2305_pp0_iter6_reg(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter1_reg = ap_const_lv1_0))) then
                a_1_reg_2356 <= ret_V_2_fu_850_p2(75 downto 70);
                tmp_8_reg_2362 <= ret_V_2_fu_850_p2(69 downto 3);
                z2_V_reg_2350 <= ret_V_2_fu_850_p2(75 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter2_reg = ap_const_lv1_0))) then
                a_2_reg_2373 <= ret_V_4_fu_942_p2(81 downto 76);
                ret_V_4_reg_2367 <= ret_V_4_fu_942_p2;
                trunc_ln657_3_reg_2379 <= trunc_ln657_3_fu_958_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                a_reg_2334 <= mul_ln682_fu_752_p2(53 downto 50);
                mul_ln682_reg_2327 <= mul_ln682_fu_752_p2;
                tmp_9_reg_2345 <= mul_ln682_fu_752_p2(53 downto 53);
                trunc_ln657_reg_2340 <= trunc_ln657_fu_768_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter13_reg = ap_const_lv1_0))) then
                add_ln657_7_reg_2576 <= add_ln657_7_fu_1835_p2;
                    ret_V_34_reg_2571(25 downto 0) <= ret_V_34_fu_1798_p4(25 downto 0);    ret_V_34_reg_2571(42 downto 35) <= ret_V_34_fu_1798_p4(42 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln407_1_reg_2315 <= and_ln407_1_fu_697_p2;
                and_ln407_1_reg_2315_pp0_iter1_reg <= and_ln407_1_reg_2315;
                b_exp_2_reg_2300 <= b_exp_2_fu_660_p3;
                b_exp_2_reg_2300_pp0_iter1_reg <= b_exp_2_reg_2300;
                icmp_ln824_1_reg_2289 <= icmp_ln824_1_fu_630_p2;
                icmp_ln824_1_reg_2289_pp0_iter1_reg <= icmp_ln824_1_reg_2289;
                icmp_ln824_reg_2271 <= icmp_ln824_fu_606_p2;
                icmp_ln824_reg_2271_pp0_iter1_reg <= icmp_ln824_reg_2271;
                p_Result_s_reg_2295 <= data_V_fu_564_p1(51 downto 51);
                sel_tmp13_reg_2321 <= sel_tmp13_fu_715_p2;
                sel_tmp13_reg_2321_pp0_iter1_reg <= sel_tmp13_reg_2321;
                tmp_24_reg_2265 <= tmp_24_fu_586_p1;
                x_is_1_reg_2276 <= x_is_1_fu_612_p2;
                x_is_1_reg_2276_pp0_iter1_reg <= x_is_1_reg_2276;
                x_is_p1_reg_2283 <= x_is_p1_fu_624_p2;
                x_is_p1_reg_2283_pp0_iter1_reg <= x_is_p1_reg_2283;
                    zext_ln488_reg_2305(5 downto 0) <= zext_ln488_fu_668_p1(5 downto 0);
                    zext_ln488_reg_2305_pp0_iter1_reg(5 downto 0) <= zext_ln488_reg_2305(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter14_reg = ap_const_lv1_0))) then
                exp_Z1P_m_1_V_reg_2591 <= exp_Z1P_m_1_l_V_fu_1929_p2(51 downto 2);
                exp_Z1_V_reg_2586 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
                exp_Z1_hi_V_reg_2596 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(57 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter15_reg = ap_const_lv1_0))) then
                icmp_ln840_reg_2601 <= icmp_ln840_fu_2064_p2;
                icmp_ln844_reg_2606 <= icmp_ln844_fu_2085_p2;
                    select_ln657_reg_2611(62 downto 0) <= select_ln657_fu_2148_p3(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter8_reg = ap_const_lv1_0))) then
                p_Result_14_reg_2507 <= ret_V_16_fu_1597_p2(119 downto 119);
                ret_V_16_reg_2502 <= ret_V_16_fu_1597_p2;
                trunc_ln2_reg_2517 <= ret_V_16_fu_1597_p2(107 downto 49);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter11_reg = ap_const_lv1_0))) then
                ret_V_32_reg_2527 <= ret_V_32_fu_1685_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter5_reg = ap_const_lv1_0))) then
                tmp_10_reg_2424 <= ret_V_10_fu_1204_p2(119 downto 44);
                tmp_11_reg_2429 <= ret_V_10_fu_1204_p2(125 downto 120);
                tmp_6_reg_2418 <= ret_V_10_fu_1204_p2(125 downto 44);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter6_reg = ap_const_lv1_0))) then
                tmp_12_reg_2435 <= ret_V_12_fu_1292_p2(130 downto 54);
                tmp_13_reg_2441 <= ret_V_12_fu_1292_p2(124 downto 54);
                tmp_14_reg_2446 <= ret_V_12_fu_1292_p2(130 downto 125);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_15_reg_2492 <= ret_V_14_fu_1404_p2(135 downto 64);
                tmp_16_reg_2497 <= ret_V_14_fu_1404_p2(135 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp_1_reg_2395 <= ret_V_6_fu_1024_p2(101 downto 96);
                tmp_s_reg_2390 <= ret_V_6_fu_1024_p2(95 downto 10);
                z4_V_reg_2384 <= ret_V_6_fu_1024_p2(101 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp13_reg_2321_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (x_is_1_reg_2276_pp0_iter4_reg = ap_const_lv1_0))) then
                tmp_3_reg_2401 <= ret_V_8_fu_1116_p2(120 downto 34);
                tmp_4_reg_2407 <= ret_V_8_fu_1116_p2(114 downto 34);
                tmp_5_reg_2412 <= ret_V_8_fu_1116_p2(120 downto 115);
            end if;
        end if;
    end process;
    zext_ln488_reg_2305(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln488_reg_2305_pp0_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln488_reg_2305_pp0_iter2_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln488_reg_2305_pp0_iter3_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln488_reg_2305_pp0_iter4_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln488_reg_2305_pp0_iter5_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln488_reg_2305_pp0_iter6_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln488_reg_2305_pp0_iter7_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    ret_V_34_reg_2571(34 downto 26) <= "000000000";
    select_ln657_reg_2611(63) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Elog2_V_fu_1437_p1 <= ap_const_lv90_58B90BFBE8E7BCD5E4F1(80 - 1 downto 0);
    Z3_V_fu_1737_p4 <= m_diff_V_fu_1712_p2(42 downto 35);
    Z4_fu_1747_p1 <= m_diff_V_fu_1712_p2(35 - 1 downto 0);
    Z4_ind_fu_1751_p4 <= m_diff_V_fu_1712_p2(34 downto 27);
    add_ln1146_1_fu_2022_p2 <= std_logic_vector(unsigned(trunc_ln1146_1_fu_2008_p3) + unsigned(zext_ln1146_11_fu_2000_p1));
    add_ln1146_2_fu_2028_p2 <= std_logic_vector(unsigned(trunc_ln3_fu_1992_p3) + unsigned(zext_ln1146_10_fu_1984_p1));
    add_ln657_1_fu_1477_p2 <= std_logic_vector(unsigned(zext_ln223_1_fu_1447_p1) + unsigned(zext_ln223_2_fu_1451_p1));
    add_ln657_2_fu_1487_p2 <= std_logic_vector(unsigned(zext_ln657_6_fu_1483_p1) + unsigned(add_ln657_fu_1471_p2));
    add_ln657_3_fu_1493_p2 <= std_logic_vector(unsigned(zext_ln223_3_fu_1455_p1) + unsigned(zext_ln223_4_fu_1459_p1));
    add_ln657_4_fu_1499_p2 <= std_logic_vector(unsigned(zext_ln223_5_fu_1463_p1) + unsigned(zext_ln223_6_fu_1467_p1));
    add_ln657_5_fu_1509_p2 <= std_logic_vector(unsigned(zext_ln657_7_fu_1505_p1) + unsigned(add_ln657_3_fu_1493_p2));
    add_ln657_7_fu_1835_p2 <= std_logic_vector(unsigned(ret_V_33_fu_1792_p2) + unsigned(zext_ln657_11_fu_1831_p1));
    add_ln657_9_fu_1919_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_V_fu_1851_p2) + unsigned(zext_ln657_13_fu_1915_p1));
    add_ln657_fu_1471_p2 <= std_logic_vector(unsigned(zext_ln223_fu_1443_p1) + unsigned(pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_q0));
    and_ln407_1_fu_697_p2 <= (icmp_ln407_fu_679_p2 and and_ln407_fu_691_p2);
    and_ln407_fu_691_p2 <= (xor_ln369_fu_673_p2 and icmp_ln407_1_fu_685_p2);
    and_ln657_fu_2143_p2 <= (icmp_ln840_fu_2064_p2 and and_ln407_1_reg_2315_pp0_iter15_reg);
    and_ln844_1_fu_2227_p2 <= (and_ln844_fu_2222_p2 and and_ln407_1_reg_2315_pp0_iter16_reg);
    and_ln844_fu_2222_p2 <= (xor_ln657_fu_2217_p2 and icmp_ln844_reg_2606);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to16_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to16 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to16)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        select_ln407_3_fu_2203_p3 when (sel_tmp13_reg_2321_pp0_iter16_reg(0) = '1') else 
        select_ln369_fu_2240_p3;
    b_exp_1_fu_654_p2 <= std_logic_vector(unsigned(zext_ln510_fu_590_p1) + unsigned(ap_const_lv12_C02));
    b_exp_2_fu_660_p3 <= 
        b_exp_1_fu_654_p2 when (p_Result_s_fu_636_p3(0) = '1') else 
        b_exp_fu_594_p2;
    b_exp_fu_594_p2 <= std_logic_vector(unsigned(zext_ln510_fu_590_p1) + unsigned(ap_const_lv12_C01));
    bitcast_ln521_fu_2139_p1 <= p_Result_15_fu_2129_p4;
    data_V_fu_564_p1 <= base_r;
    eZ_1_fu_969_p4 <= ((ap_const_lv13_1000 & ret_V_4_reg_2367) & ap_const_lv1_0);
    eZ_2_fu_1063_p3 <= (ap_const_lv8_80 & zext_ln662_1_fu_1060_p1);
    eZ_3_fu_1152_p3 <= (ap_const_lv23_400000 & tmp_3_reg_2401);
    eZ_4_fu_1240_p3 <= (ap_const_lv28_8000000 & tmp_6_reg_2418);
    eZ_5_fu_1352_p3 <= (ap_const_lv33_100000000 & tmp_12_reg_2435);
    eZ_fu_889_p3 <= (ap_const_lv5_10 & zext_ln662_fu_886_p1);
    exp_Z1P_m_1_l_V_fu_1929_p2 <= std_logic_vector(unsigned(zext_ln657_14_fu_1925_p1) + unsigned(zext_ln1146_8_fu_1901_p1));
    exp_Z2P_m_1_V_fu_1851_p2 <= std_logic_vector(unsigned(zext_ln657_12_fu_1848_p1) + unsigned(zext_ln1146_7_fu_1845_p1));
    exp_Z2_m_1_V_fu_1867_p4 <= ((Z2_V_reg_2539_pp0_iter14_reg & ap_const_lv1_0) & tmp_17_fu_1857_p4);
    grp_fu_2254_p1 <= ap_const_lv31_5C55(16 - 1 downto 0);
    icmp_ln369_fu_600_p2 <= "1" when (b_exp_fu_594_p2 = ap_const_lv12_0) else "0";
    icmp_ln407_1_fu_685_p2 <= "0" when (tmp_23_fu_576_p4 = ap_const_lv11_0) else "1";
    icmp_ln407_2_fu_703_p2 <= "1" when (tmp_23_fu_576_p4 = ap_const_lv11_0) else "0";
    icmp_ln407_fu_679_p2 <= "0" when (tmp_23_fu_576_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln805_fu_1665_p2 <= "1" when (trunc_ln805_fu_1662_p1 = ap_const_lv18_0) else "0";
    icmp_ln824_1_fu_630_p2 <= "1" when (tmp_23_fu_576_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln824_fu_606_p2 <= "1" when (tmp_24_fu_586_p1 = ap_const_lv52_0) else "0";
    icmp_ln840_fu_2064_p2 <= "1" when (signed(tmp_20_fu_2054_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln844_fu_2085_p2 <= "1" when (signed(r_exp_V_2_fu_2047_p3) < signed(ap_const_lv13_1C02)) else "0";
    index0_fu_644_p4 <= data_V_fu_564_p1(51 downto 46);
    lhs_10_fu_1247_p3 <= (tmp_10_reg_2424 & ap_const_lv54_0);
    lhs_12_fu_1359_p3 <= (tmp_13_reg_2441 & ap_const_lv64_0);
    lhs_2_fu_897_p3 <= (tmp_8_reg_2362 & ap_const_lv14_0);
    lhs_4_fu_978_p3 <= (trunc_ln657_3_reg_2379 & ap_const_lv25_0);
    lhs_6_fu_1071_p3 <= (tmp_s_reg_2390 & ap_const_lv34_0);
    lhs_8_fu_1159_p3 <= (tmp_4_reg_2407 & ap_const_lv44_0);
    lhs_V_2_fu_1575_p3 <= (Elog2_V_fu_1437_p2 & ap_const_lv30_0);
    lhs_V_4_fu_1890_p5 <= (((Z2_V_reg_2539_pp0_iter14_reg & ap_const_lv1_0) & tmp_17_fu_1857_p4) & ap_const_lv2_0);
    lhs_V_7_fu_1972_p3 <= (ret_V_35_fu_1955_p2 & ap_const_lv49_0);
    lhs_V_fu_1544_p3 <= (tmp_15_reg_2492 & ap_const_lv45_0);
    lhs_fu_816_p3 <= (trunc_ln657_reg_2340 & ap_const_lv25_0);
    log_sum_V_1_fu_1519_p2 <= std_logic_vector(unsigned(zext_ln657_8_fu_1515_p1) + unsigned(add_ln657_2_fu_1487_p2));
    m_diff_V_fu_1712_p2 <= std_logic_vector(unsigned(trunc_ln2_reg_2517_pp0_iter12_reg) - unsigned(trunc_ln657_1_fu_1702_p4));
    m_fix_hi_V_fu_1603_p4 <= ret_V_16_fu_1597_p2(119 downto 104);
    mul_ln682_fu_752_p0 <= 
        zext_ln1287_1_fu_737_p1 when (p_Result_s_reg_2295(0) = '1') else 
        p_Result_13_fu_721_p4;
    mul_ln682_fu_752_p1 <= mul_ln682_fu_752_p10(6 - 1 downto 0);
    mul_ln682_fu_752_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_q0),54));
    or_ln407_1_fu_2178_p2 <= (x_is_NaN_fu_2161_p2 or x_is_1_reg_2276_pp0_iter16_reg);
    or_ln407_2_fu_2191_p2 <= (x_is_1_reg_2276_pp0_iter16_reg or icmp_ln824_1_reg_2289_pp0_iter16_reg);
    or_ln407_3_fu_709_p2 <= (icmp_ln824_1_fu_630_p2 or icmp_ln407_2_fu_703_p2);
    or_ln407_fu_2166_p2 <= (x_is_p1_reg_2283_pp0_iter16_reg or x_is_NaN_fu_2161_p2);
    out_exp_V_fu_2123_p2 <= std_logic_vector(unsigned(trunc_ln167_fu_2119_p1) + unsigned(ap_const_lv11_3FF));
    p_Result_12_fu_568_p3 <= data_V_fu_564_p1(63 downto 63);
    p_Result_13_fu_721_p4 <= ((ap_const_lv1_1 & tmp_24_reg_2265) & ap_const_lv1_0);
    p_Result_15_fu_2129_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_2123_p2) & tmp_25_fu_2111_p3);
    p_Result_5_fu_1655_p3 <= grp_fu_2254_p3(30 downto 30);
    p_Result_s_fu_636_p3 <= data_V_fu_564_p1(51 downto 51);
    pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_address0 <= zext_ln488_reg_2305_pp0_iter7_reg(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log0_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_double_0_5_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_address0 <= zext_ln488_fu_668_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_address0 <= zext_ln488_7_fu_1336_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_address0 <= zext_ln488_8_fu_1340_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_address0 <= zext_ln488_9_fu_1344_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_address0 <= zext_ln488_10_fu_1348_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_address0 <= zext_ln488_11_fu_1410_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_address0 <= zext_ln488_1_fu_1328_p1(4 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_address0 <= zext_ln488_6_fu_1332_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln488_2_fu_1771_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln488_5_fu_1841_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln488_4_fu_1766_p1(8 - 1 downto 0);
    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 <= zext_ln488_3_fu_1761_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_17_fu_1815_p0 <= r_V_17_fu_1815_p00(43 - 1 downto 0);
    r_V_17_fu_1815_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_34_fu_1798_p4),79));
    r_V_17_fu_1815_p1 <= r_V_17_fu_1815_p10(36 - 1 downto 0);
    r_V_17_fu_1815_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_33_fu_1792_p2),79));
    r_V_19_fu_1884_p0 <= r_V_19_fu_1884_p00(49 - 1 downto 0);
    r_V_19_fu_1884_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2_m_1_V_fu_1867_p4),93));
    r_V_19_fu_1884_p1 <= r_V_19_fu_1884_p10(44 - 1 downto 0);
    r_V_19_fu_1884_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_fu_1851_p2),93));
    r_V_21_fu_730_p3 <= (ap_const_lv1_1 & tmp_24_reg_2265);
    r_V_22_fu_840_p0 <= r_V_22_fu_840_p00(71 - 1 downto 0);
    r_V_22_fu_840_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_V_fu_780_p3),75));
    r_V_22_fu_840_p1 <= r_V_22_fu_840_p10(4 - 1 downto 0);
    r_V_22_fu_840_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_2334),75));
    r_V_23_fu_924_p0 <= r_V_23_fu_924_p00(73 - 1 downto 0);
    r_V_23_fu_924_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_V_reg_2350),79));
    r_V_23_fu_924_p1 <= r_V_23_fu_924_p10(6 - 1 downto 0);
    r_V_23_fu_924_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_2356),79));
    r_V_24_fu_1006_p0 <= r_V_24_fu_1006_p00(83 - 1 downto 0);
    r_V_24_fu_1006_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z3_V_fu_962_p3),89));
    r_V_24_fu_1006_p1 <= r_V_24_fu_1006_p10(6 - 1 downto 0);
    r_V_24_fu_1006_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_2_reg_2373),89));
    r_V_25_fu_1098_p0 <= r_V_25_fu_1098_p00(92 - 1 downto 0);
    r_V_25_fu_1098_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z4_V_reg_2384),98));
    r_V_25_fu_1098_p1 <= r_V_25_fu_1098_p10(6 - 1 downto 0);
    r_V_25_fu_1098_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_2395),98));
    r_V_26_fu_1186_p0 <= r_V_26_fu_1186_p00(87 - 1 downto 0);
    r_V_26_fu_1186_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2401),93));
    r_V_26_fu_1186_p1 <= r_V_26_fu_1186_p10(6 - 1 downto 0);
    r_V_26_fu_1186_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_2412),93));
    r_V_27_fu_1274_p0 <= r_V_27_fu_1274_p00(82 - 1 downto 0);
    r_V_27_fu_1274_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_2418),88));
    r_V_27_fu_1274_p1 <= r_V_27_fu_1274_p10(6 - 1 downto 0);
    r_V_27_fu_1274_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_2429),88));
    r_V_28_fu_1386_p0 <= r_V_28_fu_1386_p00(77 - 1 downto 0);
    r_V_28_fu_1386_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_reg_2435),83));
    r_V_28_fu_1386_p1 <= r_V_28_fu_1386_p10(6 - 1 downto 0);
    r_V_28_fu_1386_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_2446),83));
    r_V_29_fu_1528_p0 <= zext_ln1069_2_fu_1525_p1(40 - 1 downto 0);
    r_V_29_fu_1528_p1 <= zext_ln1069_2_fu_1525_p1(40 - 1 downto 0);
    r_V_fu_1966_p0 <= r_V_fu_1966_p00(50 - 1 downto 0);
    r_V_fu_1966_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_2591),100));
    r_V_fu_1966_p1 <= r_V_fu_1966_p10(50 - 1 downto 0);
    r_V_fu_1966_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_2596),100));
    r_exp_V_2_fu_2047_p3 <= 
        ret_V_32_reg_2527_pp0_iter15_reg when (tmp_19_fu_2034_p3(0) = '1') else 
        r_exp_V_fu_2042_p2;
    r_exp_V_fu_2042_p2 <= std_logic_vector(signed(ret_V_32_reg_2527_pp0_iter15_reg) + signed(ap_const_lv13_1FFF));
    r_fu_1775_p4 <= pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1(25 downto 16);
    ret_V_10_fu_1204_p2 <= std_logic_vector(unsigned(ret_V_28_fu_1174_p2) - unsigned(zext_ln1147_4_fu_1200_p1));
    ret_V_12_fu_1292_p2 <= std_logic_vector(unsigned(ret_V_29_fu_1262_p2) - unsigned(zext_ln1147_5_fu_1288_p1));
    ret_V_14_fu_1404_p2 <= std_logic_vector(unsigned(ret_V_30_fu_1374_p2) - unsigned(zext_ln1147_6_fu_1400_p1));
    ret_V_15_fu_1587_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_1575_p3) + unsigned(sext_ln1146_fu_1583_p1));
    ret_V_16_fu_1597_p2 <= std_logic_vector(unsigned(ret_V_15_fu_1587_p2) + unsigned(sext_ln1146_1_fu_1593_p1));
    ret_V_18_fu_1671_p2 <= std_logic_vector(unsigned(ret_V_25_cast_fu_1646_p4) + unsigned(ap_const_lv13_1));
    ret_V_23_fu_2016_p2 <= std_logic_vector(unsigned(lhs_V_7_fu_1972_p3) + unsigned(zext_ln1146_9_fu_1980_p1));
    ret_V_24_fu_827_p2 <= std_logic_vector(unsigned(zext_ln1146_fu_823_p1) + unsigned(select_ln1287_fu_809_p3));
    ret_V_25_cast_fu_1646_p4 <= grp_fu_2254_p3(30 downto 18);
    ret_V_25_fu_912_p2 <= std_logic_vector(unsigned(zext_ln1146_1_fu_904_p1) + unsigned(zext_ln657_fu_908_p1));
    ret_V_26_fu_993_p2 <= std_logic_vector(unsigned(zext_ln1146_2_fu_985_p1) + unsigned(zext_ln657_1_fu_989_p1));
    ret_V_27_fu_1086_p2 <= std_logic_vector(unsigned(zext_ln1146_3_fu_1078_p1) + unsigned(zext_ln657_2_fu_1082_p1));
    ret_V_28_fu_1174_p2 <= std_logic_vector(unsigned(zext_ln1146_4_fu_1166_p1) + unsigned(zext_ln657_3_fu_1170_p1));
    ret_V_29_fu_1262_p2 <= std_logic_vector(unsigned(zext_ln1146_5_fu_1254_p1) + unsigned(zext_ln657_4_fu_1258_p1));
    ret_V_2_fu_850_p2 <= std_logic_vector(unsigned(ret_V_24_fu_827_p2) - unsigned(zext_ln1147_fu_846_p1));
    ret_V_30_fu_1374_p2 <= std_logic_vector(unsigned(zext_ln1146_6_fu_1366_p1) + unsigned(zext_ln657_5_fu_1370_p1));
    ret_V_32_fu_1685_p3 <= 
        select_ln804_fu_1677_p3 when (p_Result_5_fu_1655_p3(0) = '1') else 
        ret_V_25_cast_fu_1646_p4;
    ret_V_33_fu_1792_p2 <= std_logic_vector(unsigned(zext_ln657_9_fu_1785_p1) + unsigned(zext_ln657_10_fu_1788_p1));
    ret_V_34_fu_1798_p4 <= ((Z3_V_reg_2546 & ap_const_lv9_0) & pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);
    ret_V_35_fu_1955_p2 <= std_logic_vector(unsigned(exp_Z1_V_reg_2586) + unsigned(ap_const_lv58_10));
    ret_V_4_fu_942_p2 <= std_logic_vector(unsigned(ret_V_25_fu_912_p2) - unsigned(zext_ln1147_1_fu_938_p1));
    ret_V_6_fu_1024_p2 <= std_logic_vector(unsigned(ret_V_26_fu_993_p2) - unsigned(zext_ln1147_2_fu_1020_p1));
    ret_V_8_fu_1116_p2 <= std_logic_vector(unsigned(ret_V_27_fu_1086_p2) - unsigned(zext_ln1147_3_fu_1112_p1));
    ret_V_fu_1559_p2 <= std_logic_vector(unsigned(zext_ln1147_7_fu_1551_p1) - unsigned(zext_ln1147_8_fu_1555_p1));
    rhs_12_fu_1192_p3 <= (r_V_26_fu_1186_p2 & ap_const_lv16_0);
    rhs_15_fu_1280_p3 <= (r_V_27_fu_1274_p2 & ap_const_lv21_0);
    rhs_18_fu_1392_p3 <= (r_V_28_fu_1386_p2 & ap_const_lv26_0);
    rhs_19_fu_1635_p3 <= (p_Result_14_reg_2507_pp0_iter10_reg & ap_const_lv18_20000);
    rhs_3_fu_930_p3 <= (r_V_23_fu_924_p2 & ap_const_lv1_0);
    rhs_6_fu_1012_p3 <= (r_V_24_fu_1006_p2 & ap_const_lv6_0);
    rhs_9_fu_1104_p3 <= (r_V_25_fu_1098_p2 & ap_const_lv11_0);
    rhs_s_fu_1534_p4 <= r_V_29_fu_1528_p2(79 downto 1);
    sel_tmp13_fu_715_p2 <= (xor_ln369_fu_673_p2 and or_ln407_3_fu_709_p2);
    sel_tmp14_fu_2211_p3 <= 
        select_ln407_3_fu_2203_p3 when (sel_tmp13_reg_2321_pp0_iter16_reg(0) = '1') else 
        select_ln657_reg_2611;
    select_ln1287_fu_809_p3 <= 
        tmp_7_fu_796_p4 when (tmp_9_reg_2345(0) = '1') else 
        zext_ln1287_fu_805_p1;
    select_ln369_fu_2240_p3 <= 
        select_ln407_1_fu_2183_p3 when (x_is_1_reg_2276_pp0_iter16_reg(0) = '1') else 
        select_ln844_fu_2232_p3;
    select_ln407_1_fu_2183_p3 <= 
        select_ln407_fu_2171_p3 when (or_ln407_fu_2166_p2(0) = '1') else 
        ap_const_lv64_3FF0000000000000;
    select_ln407_2_fu_2195_p3 <= 
        select_ln407_1_fu_2183_p3 when (or_ln407_1_fu_2178_p2(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln407_3_fu_2203_p3 <= 
        select_ln407_2_fu_2195_p3 when (or_ln407_2_fu_2191_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln407_fu_2171_p3 <= 
        ap_const_lv64_3FF0000000000000 when (x_is_p1_reg_2283_pp0_iter16_reg(0) = '1') else 
        ap_const_lv64_7FFFFFFFFFFFFFFF;
    select_ln657_fu_2148_p3 <= 
        select_ln658_fu_2077_p3 when (and_ln657_fu_2143_p2(0) = '1') else 
        bitcast_ln521_fu_2139_p1;
    select_ln658_fu_2077_p3 <= 
        ap_const_lv64_0 when (tmp_21_fu_2070_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln804_fu_1677_p3 <= 
        ret_V_25_cast_fu_1646_p4 when (icmp_ln805_fu_1665_p2(0) = '1') else 
        ret_V_18_fu_1671_p2;
    select_ln844_fu_2232_p3 <= 
        ap_const_lv64_0 when (and_ln844_1_fu_2227_p2(0) = '1') else 
        sel_tmp14_fu_2211_p3;
        sext_ln1146_1_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_1565_p4),120));

        sext_ln1146_fu_1583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_V_1_fu_1519_p2),120));

    sf_fu_787_p4 <= ((ap_const_lv5_10 & mul_ln682_reg_2327) & ap_const_lv16_0);
    tmp_17_fu_1857_p4 <= pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(41 downto 2);
    tmp_19_fu_2034_p3 <= ret_V_23_fu_2016_p2(106 downto 106);
    tmp_20_fu_2054_p4 <= r_exp_V_2_fu_2047_p3(12 downto 10);
    tmp_21_fu_2070_p3 <= ret_V_16_reg_2502_pp0_iter15_reg(119 downto 119);
    tmp_23_fu_576_p4 <= data_V_fu_564_p1(62 downto 52);
    tmp_24_fu_586_p1 <= data_V_fu_564_p1(52 - 1 downto 0);
    tmp_25_fu_2111_p3 <= 
        tmp_fu_2091_p4 when (tmp_19_fu_2034_p3(0) = '1') else 
        tmp_2_fu_2101_p4;
    tmp_2_fu_2101_p4 <= add_ln1146_1_fu_2022_p2(104 downto 53);
    tmp_7_fu_796_p4 <= ((ap_const_lv5_10 & mul_ln682_reg_2327) & ap_const_lv17_0);
    tmp_fu_2091_p4 <= add_ln1146_2_fu_2028_p2(105 downto 54);
    trunc_ln1146_1_fu_2008_p3 <= (trunc_ln1146_2_fu_2004_p1 & ap_const_lv49_0);
    trunc_ln1146_2_fu_2004_p1 <= ret_V_35_fu_1955_p2(56 - 1 downto 0);
    trunc_ln1146_fu_1988_p1 <= ret_V_35_fu_1955_p2(57 - 1 downto 0);
    trunc_ln167_fu_2119_p1 <= r_exp_V_2_fu_2047_p3(11 - 1 downto 0);
    trunc_ln1_fu_1565_p4 <= ret_V_fu_1559_p2(117 downto 45);
    trunc_ln3_fu_1992_p3 <= (trunc_ln1146_fu_1988_p1 & ap_const_lv49_0);
    trunc_ln657_1_fu_1702_p4 <= r_V_15_fu_1696_p2(70 downto 12);
    trunc_ln657_2_fu_1905_p4 <= r_V_19_fu_1884_p2(92 downto 57);
    trunc_ln657_3_fu_958_p1 <= ret_V_4_fu_942_p2(76 - 1 downto 0);
    trunc_ln657_fu_768_p1 <= mul_ln682_fu_752_p2(50 - 1 downto 0);
    trunc_ln657_s_fu_1821_p4 <= r_V_17_fu_1815_p2(78 downto 59);
    trunc_ln805_fu_1662_p1 <= grp_fu_2254_p3(18 - 1 downto 0);
    x_is_1_fu_612_p2 <= (icmp_ln824_fu_606_p2 and icmp_ln369_fu_600_p2);
    x_is_NaN_fu_2161_p2 <= (xor_ln828_fu_2156_p2 and icmp_ln824_1_reg_2289_pp0_iter16_reg);
    x_is_p1_fu_624_p2 <= (xor_ln964_fu_618_p2 and x_is_1_fu_612_p2);
    xor_ln369_fu_673_p2 <= (x_is_1_fu_612_p2 xor ap_const_lv1_1);
    xor_ln657_fu_2217_p2 <= (icmp_ln840_reg_2601 xor ap_const_lv1_1);
    xor_ln828_fu_2156_p2 <= (icmp_ln824_reg_2271_pp0_iter16_reg xor ap_const_lv1_1);
    xor_ln964_fu_618_p2 <= (p_Result_12_fu_568_p3 xor ap_const_lv1_1);
    z1_V_fu_780_p3 <= (mul_ln682_reg_2327 & ap_const_lv17_0);
    z3_V_fu_962_p3 <= (ret_V_4_reg_2367 & ap_const_lv1_0);
    zext_ln1069_2_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_reg_2497),80));
    zext_ln1146_10_fu_1984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1966_p2),106));
    zext_ln1146_11_fu_2000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1966_p2),105));
    zext_ln1146_1_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_2_fu_897_p3),82));
    zext_ln1146_2_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_4_fu_978_p3),102));
    zext_ln1146_3_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_6_fu_1071_p3),121));
    zext_ln1146_4_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_8_fu_1159_p3),126));
    zext_ln1146_5_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_10_fu_1247_p3),131));
    zext_ln1146_6_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_12_fu_1359_p3),136));
    zext_ln1146_7_fu_1845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_34_reg_2571),44));
    zext_ln1146_8_fu_1901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_4_fu_1890_p5),52));
    zext_ln1146_9_fu_1980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1966_p2),107));
    zext_ln1146_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_fu_816_p3),76));
    zext_ln1147_1_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_3_fu_930_p3),82));
    zext_ln1147_2_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_6_fu_1012_p3),102));
    zext_ln1147_3_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_9_fu_1104_p3),121));
    zext_ln1147_4_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_12_fu_1192_p3),126));
    zext_ln1147_5_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_15_fu_1280_p3),131));
    zext_ln1147_6_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_18_fu_1392_p3),136));
    zext_ln1147_7_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_1544_p3),118));
    zext_ln1147_8_fu_1555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_s_fu_1534_p4),118));
    zext_ln1147_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_22_fu_840_p2),76));
    zext_ln1287_1_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_21_fu_730_p3),54));
    zext_ln1287_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_fu_787_p4),76));
    zext_ln223_1_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_7_6_64_array_V_q0),103));
    zext_ln223_2_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_12_6_64_array_V_q0),103));
    zext_ln223_3_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_17_6_64_array_V_q0),93));
    zext_ln223_4_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_22_6_64_array_V_q0),93));
    zext_ln223_5_fu_1463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_27_6_64_array_V_q0),83));
    zext_ln223_6_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_32_6_64_array_V_q0),83));
    zext_ln223_fu_1443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_121_12_ap_q_mode_5_ap_o_mode_3_0_4_4_16_array_V_q0),109));
    zext_ln488_10_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_2429_pp0_iter7_reg),64));
    zext_ln488_11_fu_1410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_2446),64));
    zext_ln488_1_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_2334_pp0_iter7_reg),64));
    zext_ln488_2_fu_1771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_2534),64));
    zext_ln488_3_fu_1761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_fu_1751_p4),64));
    zext_ln488_4_fu_1766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_fu_1737_p4),64));
    zext_ln488_5_fu_1841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_reg_2539),64));
    zext_ln488_6_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_2356_pp0_iter7_reg),64));
    zext_ln488_7_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_2_reg_2373_pp0_iter7_reg),64));
    zext_ln488_8_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_2395_pp0_iter7_reg),64));
    zext_ln488_9_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_2412_pp0_iter7_reg),64));
    zext_ln488_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index0_fu_644_p4),64));
    zext_ln510_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_576_p4),12));
    zext_ln657_10_fu_1788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_1775_p4),36));
    zext_ln657_11_fu_1831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln657_s_fu_1821_p4),36));
    zext_ln657_12_fu_1848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_7_reg_2576),44));
    zext_ln657_13_fu_1915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln657_2_fu_1905_p4),44));
    zext_ln657_14_fu_1925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_9_fu_1919_p2),52));
    zext_ln657_1_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_1_fu_969_p4),102));
    zext_ln657_2_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_2_fu_1063_p3),121));
    zext_ln657_3_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_3_fu_1152_p3),126));
    zext_ln657_4_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_4_fu_1240_p3),131));
    zext_ln657_5_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_5_fu_1352_p3),136));
    zext_ln657_6_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_1_fu_1477_p2),109));
    zext_ln657_7_fu_1505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_4_fu_1499_p2),93));
    zext_ln657_8_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_5_fu_1509_p2),109));
    zext_ln657_9_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_reg_2551),36));
    zext_ln657_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_fu_889_p3),82));
    zext_ln662_1_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z4_V_reg_2384),102));
    zext_ln662_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_V_reg_2350),76));
end behav;
